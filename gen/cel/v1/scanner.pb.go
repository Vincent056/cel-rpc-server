// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: cel/v1/scanner.proto

package celv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ScanResultReport contains the scan results from a node
type ScanResultReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique job ID
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Node name where the scan was executed
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// File path that was scanned
	FilePath string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// CEL expression that was evaluated
	Expression string `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	// Whether the scan succeeded
	Success bool `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if scan failed
	Error string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	// Scan results
	Results []*ScanResult `protobuf:"bytes,7,rep,name=results,proto3" json:"results,omitempty"`
	// Duration in milliseconds
	DurationMs    int64 `protobuf:"varint,8,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResultReport) Reset() {
	*x = ScanResultReport{}
	mi := &file_cel_v1_scanner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResultReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResultReport) ProtoMessage() {}

func (x *ScanResultReport) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_scanner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResultReport.ProtoReflect.Descriptor instead.
func (*ScanResultReport) Descriptor() ([]byte, []int) {
	return file_cel_v1_scanner_proto_rawDescGZIP(), []int{0}
}

func (x *ScanResultReport) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ScanResultReport) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ScanResultReport) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ScanResultReport) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ScanResultReport) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScanResultReport) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ScanResultReport) GetResults() []*ScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ScanResultReport) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// ScanResult represents a single evaluation result
type ScanResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the check (pass, fail, error)
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Error message if check failed
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Additional details
	Details       string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	mi := &file_cel_v1_scanner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_scanner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_cel_v1_scanner_proto_rawDescGZIP(), []int{1}
}

func (x *ScanResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScanResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ScanResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// ScanResultResponse acknowledges receipt of results
type ScanResultResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the result was accepted
	Accepted bool `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	// Any error message
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResultResponse) Reset() {
	*x = ScanResultResponse{}
	mi := &file_cel_v1_scanner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResultResponse) ProtoMessage() {}

func (x *ScanResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_scanner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResultResponse.ProtoReflect.Descriptor instead.
func (*ScanResultResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_scanner_proto_rawDescGZIP(), []int{2}
}

func (x *ScanResultResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *ScanResultResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_cel_v1_scanner_proto protoreflect.FileDescriptor

const file_cel_v1_scanner_proto_rawDesc = "" +
	"\n" +
	"\x14cel/v1/scanner.proto\x12\x06cel.v1\"\x82\x02\n" +
	"\x10ScanResultReport\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\x12\x1e\n" +
	"\n" +
	"expression\x18\x04 \x01(\tR\n" +
	"expression\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x12,\n" +
	"\aresults\x18\a \x03(\v2\x12.cel.v1.ScanResultR\aresults\x12\x1f\n" +
	"\vduration_ms\x18\b \x01(\x03R\n" +
	"durationMs\"c\n" +
	"\n" +
	"ScanResult\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"F\n" +
	"\x12ScanResultResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2_\n" +
	"\x14ScannerResultService\x12G\n" +
	"\rStreamResults\x12\x18.cel.v1.ScanResultReport\x1a\x1a.cel.v1.ScanResultResponse(\x01B7Z5github.com/Vincent056/cel-rpc-server/gen/cel/v1;celv1b\x06proto3"

var (
	file_cel_v1_scanner_proto_rawDescOnce sync.Once
	file_cel_v1_scanner_proto_rawDescData []byte
)

func file_cel_v1_scanner_proto_rawDescGZIP() []byte {
	file_cel_v1_scanner_proto_rawDescOnce.Do(func() {
		file_cel_v1_scanner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cel_v1_scanner_proto_rawDesc), len(file_cel_v1_scanner_proto_rawDesc)))
	})
	return file_cel_v1_scanner_proto_rawDescData
}

var file_cel_v1_scanner_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cel_v1_scanner_proto_goTypes = []any{
	(*ScanResultReport)(nil),   // 0: cel.v1.ScanResultReport
	(*ScanResult)(nil),         // 1: cel.v1.ScanResult
	(*ScanResultResponse)(nil), // 2: cel.v1.ScanResultResponse
}
var file_cel_v1_scanner_proto_depIdxs = []int32{
	1, // 0: cel.v1.ScanResultReport.results:type_name -> cel.v1.ScanResult
	0, // 1: cel.v1.ScannerResultService.StreamResults:input_type -> cel.v1.ScanResultReport
	2, // 2: cel.v1.ScannerResultService.StreamResults:output_type -> cel.v1.ScanResultResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cel_v1_scanner_proto_init() }
func file_cel_v1_scanner_proto_init() {
	if File_cel_v1_scanner_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cel_v1_scanner_proto_rawDesc), len(file_cel_v1_scanner_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cel_v1_scanner_proto_goTypes,
		DependencyIndexes: file_cel_v1_scanner_proto_depIdxs,
		MessageInfos:      file_cel_v1_scanner_proto_msgTypes,
	}.Build()
	File_cel_v1_scanner_proto = out.File
	file_cel_v1_scanner_proto_goTypes = nil
	file_cel_v1_scanner_proto_depIdxs = nil
}
