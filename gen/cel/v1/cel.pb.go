// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: cel/v1/cel.proto

package celv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// How to access files on nodes
type FileAccessMode int32

const (
	FileAccessMode_FILE_ACCESS_MODE_UNSPECIFIED FileAccessMode = 0
	FileAccessMode_FILE_ACCESS_MODE_HOST_PATH   FileAccessMode = 1 // Direct host path access (requires privileges)
	FileAccessMode_FILE_ACCESS_MODE_CONTAINER   FileAccessMode = 2 // Access from within container
	FileAccessMode_FILE_ACCESS_MODE_DAEMONSET   FileAccessMode = 3 // Deploy as DaemonSet for node access
	FileAccessMode_FILE_ACCESS_MODE_SSH         FileAccessMode = 4 // SSH to node (requires credentials)
)

// Enum value maps for FileAccessMode.
var (
	FileAccessMode_name = map[int32]string{
		0: "FILE_ACCESS_MODE_UNSPECIFIED",
		1: "FILE_ACCESS_MODE_HOST_PATH",
		2: "FILE_ACCESS_MODE_CONTAINER",
		3: "FILE_ACCESS_MODE_DAEMONSET",
		4: "FILE_ACCESS_MODE_SSH",
	}
	FileAccessMode_value = map[string]int32{
		"FILE_ACCESS_MODE_UNSPECIFIED": 0,
		"FILE_ACCESS_MODE_HOST_PATH":   1,
		"FILE_ACCESS_MODE_CONTAINER":   2,
		"FILE_ACCESS_MODE_DAEMONSET":   3,
		"FILE_ACCESS_MODE_SSH":         4,
	}
)

func (x FileAccessMode) Enum() *FileAccessMode {
	p := new(FileAccessMode)
	*p = x
	return p
}

func (x FileAccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileAccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[0].Descriptor()
}

func (FileAccessMode) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[0]
}

func (x FileAccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileAccessMode.Descriptor instead.
func (FileAccessMode) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{0}
}

type ExportFormat int32

const (
	ExportFormat_EXPORT_FORMAT_UNSPECIFIED ExportFormat = 0
	ExportFormat_EXPORT_FORMAT_JSON        ExportFormat = 1
	ExportFormat_EXPORT_FORMAT_YAML        ExportFormat = 2
	ExportFormat_EXPORT_FORMAT_REGO        ExportFormat = 3 // Convert to OPA Rego
	ExportFormat_EXPORT_FORMAT_SENTINEL    ExportFormat = 4 // Convert to HashiCorp Sentinel
)

// Enum value maps for ExportFormat.
var (
	ExportFormat_name = map[int32]string{
		0: "EXPORT_FORMAT_UNSPECIFIED",
		1: "EXPORT_FORMAT_JSON",
		2: "EXPORT_FORMAT_YAML",
		3: "EXPORT_FORMAT_REGO",
		4: "EXPORT_FORMAT_SENTINEL",
	}
	ExportFormat_value = map[string]int32{
		"EXPORT_FORMAT_UNSPECIFIED": 0,
		"EXPORT_FORMAT_JSON":        1,
		"EXPORT_FORMAT_YAML":        2,
		"EXPORT_FORMAT_REGO":        3,
		"EXPORT_FORMAT_SENTINEL":    4,
	}
)

func (x ExportFormat) Enum() *ExportFormat {
	p := new(ExportFormat)
	*p = x
	return p
}

func (x ExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[1].Descriptor()
}

func (ExportFormat) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[1]
}

func (x ExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportFormat.Descriptor instead.
func (ExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{1}
}

type ImportFormat int32

const (
	ImportFormat_IMPORT_FORMAT_UNSPECIFIED ImportFormat = 0
	ImportFormat_IMPORT_FORMAT_JSON        ImportFormat = 1
	ImportFormat_IMPORT_FORMAT_YAML        ImportFormat = 2
	ImportFormat_IMPORT_FORMAT_AUTO_DETECT ImportFormat = 3
)

// Enum value maps for ImportFormat.
var (
	ImportFormat_name = map[int32]string{
		0: "IMPORT_FORMAT_UNSPECIFIED",
		1: "IMPORT_FORMAT_JSON",
		2: "IMPORT_FORMAT_YAML",
		3: "IMPORT_FORMAT_AUTO_DETECT",
	}
	ImportFormat_value = map[string]int32{
		"IMPORT_FORMAT_UNSPECIFIED": 0,
		"IMPORT_FORMAT_JSON":        1,
		"IMPORT_FORMAT_YAML":        2,
		"IMPORT_FORMAT_AUTO_DETECT": 3,
	}
)

func (x ImportFormat) Enum() *ImportFormat {
	p := new(ImportFormat)
	*p = x
	return p
}

func (x ImportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[2].Descriptor()
}

func (ImportFormat) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[2]
}

func (x ImportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImportFormat.Descriptor instead.
func (ImportFormat) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{2}
}

type QuestionType int32

const (
	QuestionType_QUESTION_TYPE_UNSPECIFIED     QuestionType = 0
	QuestionType_QUESTION_TYPE_CLARIFICATION   QuestionType = 1 // Need more details
	QuestionType_QUESTION_TYPE_CONFIRMATION    QuestionType = 2 // Confirm understanding
	QuestionType_QUESTION_TYPE_CHOICE          QuestionType = 3 // Choose from options
	QuestionType_QUESTION_TYPE_ADDITIONAL_INFO QuestionType = 4 // Need extra context
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "QUESTION_TYPE_UNSPECIFIED",
		1: "QUESTION_TYPE_CLARIFICATION",
		2: "QUESTION_TYPE_CONFIRMATION",
		3: "QUESTION_TYPE_CHOICE",
		4: "QUESTION_TYPE_ADDITIONAL_INFO",
	}
	QuestionType_value = map[string]int32{
		"QUESTION_TYPE_UNSPECIFIED":     0,
		"QUESTION_TYPE_CLARIFICATION":   1,
		"QUESTION_TYPE_CONFIRMATION":    2,
		"QUESTION_TYPE_CHOICE":          3,
		"QUESTION_TYPE_ADDITIONAL_INFO": 4,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[3].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[3]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{3}
}

type StreamControl_Action int32

const (
	StreamControl_CANCEL StreamControl_Action = 0
	StreamControl_PAUSE  StreamControl_Action = 1
	StreamControl_RESUME StreamControl_Action = 2
)

// Enum value maps for StreamControl_Action.
var (
	StreamControl_Action_name = map[int32]string{
		0: "CANCEL",
		1: "PAUSE",
		2: "RESUME",
	}
	StreamControl_Action_value = map[string]int32{
		"CANCEL": 0,
		"PAUSE":  1,
		"RESUME": 2,
	}
)

func (x StreamControl_Action) Enum() *StreamControl_Action {
	p := new(StreamControl_Action)
	*p = x
	return p
}

func (x StreamControl_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamControl_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[4].Descriptor()
}

func (StreamControl_Action) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[4]
}

func (x StreamControl_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamControl_Action.Descriptor instead.
func (StreamControl_Action) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{20, 0}
}

type NodeScannerStatus_Status int32

const (
	NodeScannerStatus_PENDING   NodeScannerStatus_Status = 0
	NodeScannerStatus_SCHEDULED NodeScannerStatus_Status = 1
	NodeScannerStatus_RUNNING   NodeScannerStatus_Status = 2
	NodeScannerStatus_COMPLETED NodeScannerStatus_Status = 3
	NodeScannerStatus_FAILED    NodeScannerStatus_Status = 4
	NodeScannerStatus_CANCELLED NodeScannerStatus_Status = 5
)

// Enum value maps for NodeScannerStatus_Status.
var (
	NodeScannerStatus_Status_name = map[int32]string{
		0: "PENDING",
		1: "SCHEDULED",
		2: "RUNNING",
		3: "COMPLETED",
		4: "FAILED",
		5: "CANCELLED",
	}
	NodeScannerStatus_Status_value = map[string]int32{
		"PENDING":   0,
		"SCHEDULED": 1,
		"RUNNING":   2,
		"COMPLETED": 3,
		"FAILED":    4,
		"CANCELLED": 5,
	}
)

func (x NodeScannerStatus_Status) Enum() *NodeScannerStatus_Status {
	p := new(NodeScannerStatus_Status)
	*p = x
	return p
}

func (x NodeScannerStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeScannerStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cel_v1_cel_proto_enumTypes[5].Descriptor()
}

func (NodeScannerStatus_Status) Type() protoreflect.EnumType {
	return &file_cel_v1_cel_proto_enumTypes[5]
}

func (x NodeScannerStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeScannerStatus_Status.Descriptor instead.
func (NodeScannerStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{22, 0}
}

// Request and response messages for CEL validation
type ValidateCELRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`                // CEL expression to evaluate
	TestCases     []*RuleTestCase        `protobuf:"bytes,2,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"` // Test cases for offline validation
	Inputs        []*RuleInput           `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`                        // Multiple inputs for the rule
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateCELRequest) Reset() {
	*x = ValidateCELRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCELRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCELRequest) ProtoMessage() {}

func (x *ValidateCELRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCELRequest.ProtoReflect.Descriptor instead.
func (*ValidateCELRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{0}
}

func (x *ValidateCELRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ValidateCELRequest) GetTestCases() []*RuleTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

func (x *ValidateCELRequest) GetInputs() []*RuleInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

// Input definition for CEL rules
type RuleInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Variable name in CEL expression
	// Types that are valid to be assigned to InputType:
	//
	//	*RuleInput_Kubernetes
	//	*RuleInput_File
	//	*RuleInput_Http
	InputType     isRuleInput_InputType `protobuf_oneof:"input_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleInput) Reset() {
	*x = RuleInput{}
	mi := &file_cel_v1_cel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleInput) ProtoMessage() {}

func (x *RuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleInput.ProtoReflect.Descriptor instead.
func (*RuleInput) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{1}
}

func (x *RuleInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleInput) GetInputType() isRuleInput_InputType {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *RuleInput) GetKubernetes() *KubernetesInput {
	if x != nil {
		if x, ok := x.InputType.(*RuleInput_Kubernetes); ok {
			return x.Kubernetes
		}
	}
	return nil
}

func (x *RuleInput) GetFile() *FileInput {
	if x != nil {
		if x, ok := x.InputType.(*RuleInput_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *RuleInput) GetHttp() *HttpInput {
	if x != nil {
		if x, ok := x.InputType.(*RuleInput_Http); ok {
			return x.Http
		}
	}
	return nil
}

type isRuleInput_InputType interface {
	isRuleInput_InputType()
}

type RuleInput_Kubernetes struct {
	Kubernetes *KubernetesInput `protobuf:"bytes,2,opt,name=kubernetes,proto3,oneof"`
}

type RuleInput_File struct {
	File *FileInput `protobuf:"bytes,3,opt,name=file,proto3,oneof"`
}

type RuleInput_Http struct {
	Http *HttpInput `protobuf:"bytes,4,opt,name=http,proto3,oneof"`
}

func (*RuleInput_Kubernetes) isRuleInput_InputType() {}

func (*RuleInput_File) isRuleInput_InputType() {}

func (*RuleInput_Http) isRuleInput_InputType() {}

// Kubernetes resource input
type KubernetesInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Resource      string                 `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ResourceName  string                 `protobuf:"bytes,5,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"` // Specific resource name (optional)
	ListAll       bool                   `protobuf:"varint,6,opt,name=list_all,json=listAll,proto3" json:"list_all,omitempty"`               // If true, fetch all resources as a list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesInput) Reset() {
	*x = KubernetesInput{}
	mi := &file_cel_v1_cel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesInput) ProtoMessage() {}

func (x *KubernetesInput) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesInput.ProtoReflect.Descriptor instead.
func (*KubernetesInput) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesInput) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *KubernetesInput) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KubernetesInput) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *KubernetesInput) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesInput) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *KubernetesInput) GetListAll() bool {
	if x != nil {
		return x.ListAll
	}
	return false
}

// File system input
type FileInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Path             string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Format           string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"` // json, yaml, text
	Recursive        bool                   `protobuf:"varint,3,opt,name=recursive,proto3" json:"recursive,omitempty"`
	CheckPermissions bool                   `protobuf:"varint,4,opt,name=check_permissions,json=checkPermissions,proto3" json:"check_permissions,omitempty"`
	// Node targeting for cluster file system checks
	//
	// Types that are valid to be assigned to Target:
	//
	//	*FileInput_NodeSelector
	//	*FileInput_AllNodes
	Target isFileInput_Target `protobuf_oneof:"target"`
	// How to access the file system
	AccessMode    FileAccessMode `protobuf:"varint,7,opt,name=access_mode,json=accessMode,proto3,enum=cel.v1.FileAccessMode" json:"access_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInput) Reset() {
	*x = FileInput{}
	mi := &file_cel_v1_cel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInput) ProtoMessage() {}

func (x *FileInput) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInput.ProtoReflect.Descriptor instead.
func (*FileInput) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{3}
}

func (x *FileInput) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileInput) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FileInput) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *FileInput) GetCheckPermissions() bool {
	if x != nil {
		return x.CheckPermissions
	}
	return false
}

func (x *FileInput) GetTarget() isFileInput_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *FileInput) GetNodeSelector() *NodeSelector {
	if x != nil {
		if x, ok := x.Target.(*FileInput_NodeSelector); ok {
			return x.NodeSelector
		}
	}
	return nil
}

func (x *FileInput) GetAllNodes() bool {
	if x != nil {
		if x, ok := x.Target.(*FileInput_AllNodes); ok {
			return x.AllNodes
		}
	}
	return false
}

func (x *FileInput) GetAccessMode() FileAccessMode {
	if x != nil {
		return x.AccessMode
	}
	return FileAccessMode_FILE_ACCESS_MODE_UNSPECIFIED
}

type isFileInput_Target interface {
	isFileInput_Target()
}

type FileInput_NodeSelector struct {
	NodeSelector *NodeSelector `protobuf:"bytes,5,opt,name=node_selector,json=nodeSelector,proto3,oneof"` // Run on specific node(s)
}

type FileInput_AllNodes struct {
	AllNodes bool `protobuf:"varint,6,opt,name=all_nodes,json=allNodes,proto3,oneof"` // Run on all nodes
}

func (*FileInput_NodeSelector) isFileInput_Target() {}

func (*FileInput_AllNodes) isFileInput_Target() {}

// Node selection criteria
type NodeSelector struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeNames       []string               `protobuf:"bytes,1,rep,name=node_names,json=nodeNames,proto3" json:"node_names,omitempty"`                                                    // Specific node names
	Labels          map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Node label selector
	TaintsTolerated []string               `protobuf:"bytes,3,rep,name=taints_tolerated,json=taintsTolerated,proto3" json:"taints_tolerated,omitempty"`                                  // Tolerate specific taints
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NodeSelector) Reset() {
	*x = NodeSelector{}
	mi := &file_cel_v1_cel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSelector) ProtoMessage() {}

func (x *NodeSelector) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSelector.ProtoReflect.Descriptor instead.
func (*NodeSelector) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{4}
}

func (x *NodeSelector) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

func (x *NodeSelector) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NodeSelector) GetTaintsTolerated() []string {
	if x != nil {
		return x.TaintsTolerated
	}
	return nil
}

// HTTP API input
type HttpInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpInput) Reset() {
	*x = HttpInput{}
	mi := &file_cel_v1_cel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpInput) ProtoMessage() {}

func (x *HttpInput) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpInput.ProtoReflect.Descriptor instead.
func (*HttpInput) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{5}
}

func (x *HttpInput) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpInput) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpInput) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpInput) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ValidationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Results       []*ValidationResult    `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Performance   *PerformanceMetrics    `protobuf:"bytes,4,opt,name=performance,proto3" json:"performance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{6}
}

func (x *ValidationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidationResponse) GetResults() []*ValidationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ValidationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidationResponse) GetPerformance() *PerformanceMetrics {
	if x != nil {
		return x.Performance
	}
	return nil
}

type ValidationResult struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TestCase string                 `protobuf:"bytes,1,opt,name=test_case,json=testCase,proto3" json:"test_case,omitempty"`
	Passed   bool                   `protobuf:"varint,2,opt,name=passed,proto3" json:"passed,omitempty"`
	Error    string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Details  string                 `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	// Resource information for better debugging
	ResourceInfo      *ResourceInfo     `protobuf:"bytes,5,opt,name=resource_info,json=resourceInfo,proto3" json:"resource_info,omitempty"`
	EvaluationContext map[string]string `protobuf:"bytes,6,rep,name=evaluation_context,json=evaluationContext,proto3" json:"evaluation_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Variables used in evaluation
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ValidationResult) Reset() {
	*x = ValidationResult{}
	mi := &file_cel_v1_cel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResult) ProtoMessage() {}

func (x *ValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResult.ProtoReflect.Descriptor instead.
func (*ValidationResult) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{7}
}

func (x *ValidationResult) GetTestCase() string {
	if x != nil {
		return x.TestCase
	}
	return ""
}

func (x *ValidationResult) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *ValidationResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidationResult) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *ValidationResult) GetResourceInfo() *ResourceInfo {
	if x != nil {
		return x.ResourceInfo
	}
	return nil
}

func (x *ValidationResult) GetEvaluationContext() map[string]string {
	if x != nil {
		return x.EvaluationContext
	}
	return nil
}

// Information about the resource being evaluated
type ResourceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion    string                 `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Uid           string                 `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceInfo) Reset() {
	*x = ResourceInfo{}
	mi := &file_cel_v1_cel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInfo) ProtoMessage() {}

func (x *ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInfo.ProtoReflect.Descriptor instead.
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceInfo) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ResourceInfo) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type PerformanceMetrics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalTimeMs    int64                  `protobuf:"varint,1,opt,name=total_time_ms,json=totalTimeMs,proto3" json:"total_time_ms,omitempty"`
	AverageTimeMs  int64                  `protobuf:"varint,2,opt,name=average_time_ms,json=averageTimeMs,proto3" json:"average_time_ms,omitempty"`
	ResourcesCount int32                  `protobuf:"varint,3,opt,name=resources_count,json=resourcesCount,proto3" json:"resources_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_cel_v1_cel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceMetrics.ProtoReflect.Descriptor instead.
func (*PerformanceMetrics) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{9}
}

func (x *PerformanceMetrics) GetTotalTimeMs() int64 {
	if x != nil {
		return x.TotalTimeMs
	}
	return 0
}

func (x *PerformanceMetrics) GetAverageTimeMs() int64 {
	if x != nil {
		return x.AverageTimeMs
	}
	return 0
}

func (x *PerformanceMetrics) GetResourcesCount() int32 {
	if x != nil {
		return x.ResourcesCount
	}
	return 0
}

// Request and response for resource discovery
type DiscoverResourcesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ResourceTypes []string               `protobuf:"bytes,2,rep,name=resource_types,json=resourceTypes,proto3" json:"resource_types,omitempty"` // Deprecated: use gvr_filters instead
	// GVR filters for resource discovery
	GvrFilters []*GVRFilter `protobuf:"bytes,3,rep,name=gvr_filters,json=gvrFilters,proto3" json:"gvr_filters,omitempty"`
	// Configuration options for discovery
	Options       *DiscoveryOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverResourcesRequest) Reset() {
	*x = DiscoverResourcesRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverResourcesRequest) ProtoMessage() {}

func (x *DiscoverResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverResourcesRequest.ProtoReflect.Descriptor instead.
func (*DiscoverResourcesRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{10}
}

func (x *DiscoverResourcesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DiscoverResourcesRequest) GetResourceTypes() []string {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

func (x *DiscoverResourcesRequest) GetGvrFilters() []*GVRFilter {
	if x != nil {
		return x.GvrFilters
	}
	return nil
}

func (x *DiscoverResourcesRequest) GetOptions() *DiscoveryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Discovery configuration options
type DiscoveryOptions struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IncludeCount      bool                   `protobuf:"varint,1,opt,name=include_count,json=includeCount,proto3" json:"include_count,omitempty"`                    // Whether to count resources (default: true)
	IncludeSamples    bool                   `protobuf:"varint,2,opt,name=include_samples,json=includeSamples,proto3" json:"include_samples,omitempty"`              // Whether to include sample resources (default: false)
	MaxSamplesPerType int32                  `protobuf:"varint,3,opt,name=max_samples_per_type,json=maxSamplesPerType,proto3" json:"max_samples_per_type,omitempty"` // Max number of samples per resource type (default: 1)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DiscoveryOptions) Reset() {
	*x = DiscoveryOptions{}
	mi := &file_cel_v1_cel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryOptions) ProtoMessage() {}

func (x *DiscoveryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryOptions.ProtoReflect.Descriptor instead.
func (*DiscoveryOptions) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{11}
}

func (x *DiscoveryOptions) GetIncludeCount() bool {
	if x != nil {
		return x.IncludeCount
	}
	return false
}

func (x *DiscoveryOptions) GetIncludeSamples() bool {
	if x != nil {
		return x.IncludeSamples
	}
	return false
}

func (x *DiscoveryOptions) GetMaxSamplesPerType() int32 {
	if x != nil {
		return x.MaxSamplesPerType
	}
	return 0
}

// GroupVersionResource filter
type GVRFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Resource      string                 `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GVRFilter) Reset() {
	*x = GVRFilter{}
	mi := &file_cel_v1_cel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GVRFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GVRFilter) ProtoMessage() {}

func (x *GVRFilter) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GVRFilter.ProtoReflect.Descriptor instead.
func (*GVRFilter) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{12}
}

func (x *GVRFilter) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GVRFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GVRFilter) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type ResourceDiscoveryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Resources     []*DiscoveredResource  `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceDiscoveryResponse) Reset() {
	*x = ResourceDiscoveryResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceDiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDiscoveryResponse) ProtoMessage() {}

func (x *ResourceDiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDiscoveryResponse.ProtoReflect.Descriptor instead.
func (*ResourceDiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{13}
}

func (x *ResourceDiscoveryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResourceDiscoveryResponse) GetResources() []*DiscoveredResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ResourceDiscoveryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DiscoveredResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiVersion    string                 `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Count         int32                  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Samples       []*ResourceSample      `protobuf:"bytes,6,rep,name=samples,proto3" json:"samples,omitempty"` // Sample resources
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveredResource) Reset() {
	*x = DiscoveredResource{}
	mi := &file_cel_v1_cel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredResource) ProtoMessage() {}

func (x *DiscoveredResource) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredResource.ProtoReflect.Descriptor instead.
func (*DiscoveredResource) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{14}
}

func (x *DiscoveredResource) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *DiscoveredResource) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DiscoveredResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveredResource) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DiscoveredResource) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DiscoveredResource) GetSamples() []*ResourceSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

// Sample resource information
type ResourceSample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceSample) Reset() {
	*x = ResourceSample{}
	mi := &file_cel_v1_cel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSample) ProtoMessage() {}

func (x *ResourceSample) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSample.ProtoReflect.Descriptor instead.
func (*ResourceSample) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{15}
}

func (x *ResourceSample) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceSample) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceSample) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ResourceSample) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Agent execution messages
type AgentTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Objective     string                 `protobuf:"bytes,3,opt,name=objective,proto3" json:"objective,omitempty"`
	ContextJson   string                 `protobuf:"bytes,4,opt,name=context_json,json=contextJson,proto3" json:"context_json,omitempty"` // JSON-encoded context
	Parameters    map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentTask) Reset() {
	*x = AgentTask{}
	mi := &file_cel_v1_cel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTask) ProtoMessage() {}

func (x *AgentTask) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTask.ProtoReflect.Descriptor instead.
func (*AgentTask) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{16}
}

func (x *AgentTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentTask) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AgentTask) GetObjective() string {
	if x != nil {
		return x.Objective
	}
	return ""
}

func (x *AgentTask) GetContextJson() string {
	if x != nil {
		return x.ContextJson
	}
	return ""
}

func (x *AgentTask) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type AgentExecutionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Task             *AgentTask             `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	AgentRole        string                 `protobuf:"bytes,2,opt,name=agent_role,json=agentRole,proto3" json:"agent_role,omitempty"`
	UseCelValidation bool                   `protobuf:"varint,3,opt,name=use_cel_validation,json=useCelValidation,proto3" json:"use_cel_validation,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AgentExecutionRequest) Reset() {
	*x = AgentExecutionRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentExecutionRequest) ProtoMessage() {}

func (x *AgentExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentExecutionRequest.ProtoReflect.Descriptor instead.
func (*AgentExecutionRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{17}
}

func (x *AgentExecutionRequest) GetTask() *AgentTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *AgentExecutionRequest) GetAgentRole() string {
	if x != nil {
		return x.AgentRole
	}
	return ""
}

func (x *AgentExecutionRequest) GetUseCelValidation() bool {
	if x != nil {
		return x.UseCelValidation
	}
	return false
}

type AgentExecutionResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ResultJson      string                 `protobuf:"bytes,2,opt,name=result_json,json=resultJson,proto3" json:"result_json,omitempty"` // JSON-encoded result
	Error           string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Logs            []string               `protobuf:"bytes,4,rep,name=logs,proto3" json:"logs,omitempty"`
	ExecutionTimeMs int64                  `protobuf:"varint,5,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AgentExecutionResponse) Reset() {
	*x = AgentExecutionResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentExecutionResponse) ProtoMessage() {}

func (x *AgentExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentExecutionResponse.ProtoReflect.Descriptor instead.
func (*AgentExecutionResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{18}
}

func (x *AgentExecutionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AgentExecutionResponse) GetResultJson() string {
	if x != nil {
		return x.ResultJson
	}
	return ""
}

func (x *AgentExecutionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AgentExecutionResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *AgentExecutionResponse) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

// ValidateCELStreamRequest is sent by client to initiate validation
type ValidateCELStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*ValidateCELStreamRequest_ValidationRequest
	//	*ValidateCELStreamRequest_Control
	Request       isValidateCELStreamRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateCELStreamRequest) Reset() {
	*x = ValidateCELStreamRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCELStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCELStreamRequest) ProtoMessage() {}

func (x *ValidateCELStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCELStreamRequest.ProtoReflect.Descriptor instead.
func (*ValidateCELStreamRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateCELStreamRequest) GetRequest() isValidateCELStreamRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ValidateCELStreamRequest) GetValidationRequest() *ValidateCELRequest {
	if x != nil {
		if x, ok := x.Request.(*ValidateCELStreamRequest_ValidationRequest); ok {
			return x.ValidationRequest
		}
	}
	return nil
}

func (x *ValidateCELStreamRequest) GetControl() *StreamControl {
	if x != nil {
		if x, ok := x.Request.(*ValidateCELStreamRequest_Control); ok {
			return x.Control
		}
	}
	return nil
}

type isValidateCELStreamRequest_Request interface {
	isValidateCELStreamRequest_Request()
}

type ValidateCELStreamRequest_ValidationRequest struct {
	// Initial validation request
	ValidationRequest *ValidateCELRequest `protobuf:"bytes,1,opt,name=validation_request,json=validationRequest,proto3,oneof"`
}

type ValidateCELStreamRequest_Control struct {
	// Control message (e.g., cancel specific node)
	Control *StreamControl `protobuf:"bytes,2,opt,name=control,proto3,oneof"`
}

func (*ValidateCELStreamRequest_ValidationRequest) isValidateCELStreamRequest_Request() {}

func (*ValidateCELStreamRequest_Control) isValidateCELStreamRequest_Request() {}

// StreamControl allows client to control the stream
type StreamControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        StreamControl_Action   `protobuf:"varint,1,opt,name=action,proto3,enum=cel.v1.StreamControl_Action" json:"action,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"` // Optional: target specific node
	JobId         string                 `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`          // Optional: target specific job
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamControl) Reset() {
	*x = StreamControl{}
	mi := &file_cel_v1_cel_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControl) ProtoMessage() {}

func (x *StreamControl) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControl.ProtoReflect.Descriptor instead.
func (*StreamControl) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{20}
}

func (x *StreamControl) GetAction() StreamControl_Action {
	if x != nil {
		return x.Action
	}
	return StreamControl_CANCEL
}

func (x *StreamControl) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *StreamControl) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// ValidateCELStreamResponse streams back results and status updates
type ValidateCELStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ValidateCELStreamResponse_NodeStatus
	//	*ValidateCELStreamResponse_NodeResult
	//	*ValidateCELStreamResponse_Progress
	//	*ValidateCELStreamResponse_Error
	Response      isValidateCELStreamResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateCELStreamResponse) Reset() {
	*x = ValidateCELStreamResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateCELStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCELStreamResponse) ProtoMessage() {}

func (x *ValidateCELStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateCELStreamResponse.ProtoReflect.Descriptor instead.
func (*ValidateCELStreamResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{21}
}

func (x *ValidateCELStreamResponse) GetResponse() isValidateCELStreamResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ValidateCELStreamResponse) GetNodeStatus() *NodeScannerStatus {
	if x != nil {
		if x, ok := x.Response.(*ValidateCELStreamResponse_NodeStatus); ok {
			return x.NodeStatus
		}
	}
	return nil
}

func (x *ValidateCELStreamResponse) GetNodeResult() *NodeValidationResult {
	if x != nil {
		if x, ok := x.Response.(*ValidateCELStreamResponse_NodeResult); ok {
			return x.NodeResult
		}
	}
	return nil
}

func (x *ValidateCELStreamResponse) GetProgress() *ValidationProgress {
	if x != nil {
		if x, ok := x.Response.(*ValidateCELStreamResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *ValidateCELStreamResponse) GetError() *StreamError {
	if x != nil {
		if x, ok := x.Response.(*ValidateCELStreamResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isValidateCELStreamResponse_Response interface {
	isValidateCELStreamResponse_Response()
}

type ValidateCELStreamResponse_NodeStatus struct {
	// Node scanner status update
	NodeStatus *NodeScannerStatus `protobuf:"bytes,1,opt,name=node_status,json=nodeStatus,proto3,oneof"`
}

type ValidateCELStreamResponse_NodeResult struct {
	// Validation result from a node
	NodeResult *NodeValidationResult `protobuf:"bytes,2,opt,name=node_result,json=nodeResult,proto3,oneof"`
}

type ValidateCELStreamResponse_Progress struct {
	// Overall progress update
	Progress *ValidationProgress `protobuf:"bytes,3,opt,name=progress,proto3,oneof"`
}

type ValidateCELStreamResponse_Error struct {
	// Error occurred
	Error *StreamError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ValidateCELStreamResponse_NodeStatus) isValidateCELStreamResponse_Response() {}

func (*ValidateCELStreamResponse_NodeResult) isValidateCELStreamResponse_Response() {}

func (*ValidateCELStreamResponse_Progress) isValidateCELStreamResponse_Response() {}

func (*ValidateCELStreamResponse_Error) isValidateCELStreamResponse_Response() {}

// NodeScannerStatus tracks the status of a scanner on a specific node
type NodeScannerStatus struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	NodeName      string                   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	JobId         string                   `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status        NodeScannerStatus_Status `protobuf:"varint,3,opt,name=status,proto3,enum=cel.v1.NodeScannerStatus_Status" json:"status,omitempty"`
	Message       string                   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeScannerStatus) Reset() {
	*x = NodeScannerStatus{}
	mi := &file_cel_v1_cel_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeScannerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeScannerStatus) ProtoMessage() {}

func (x *NodeScannerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeScannerStatus.ProtoReflect.Descriptor instead.
func (*NodeScannerStatus) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{22}
}

func (x *NodeScannerStatus) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeScannerStatus) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *NodeScannerStatus) GetStatus() NodeScannerStatus_Status {
	if x != nil {
		return x.Status
	}
	return NodeScannerStatus_PENDING
}

func (x *NodeScannerStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeScannerStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// NodeValidationResult contains results from a specific node
type NodeValidationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeName      string                 `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Expression    string                 `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	Result        *ValidationResult      `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	DurationMs    int64                  `protobuf:"varint,6,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeValidationResult) Reset() {
	*x = NodeValidationResult{}
	mi := &file_cel_v1_cel_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeValidationResult) ProtoMessage() {}

func (x *NodeValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeValidationResult.ProtoReflect.Descriptor instead.
func (*NodeValidationResult) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{23}
}

func (x *NodeValidationResult) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeValidationResult) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *NodeValidationResult) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *NodeValidationResult) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *NodeValidationResult) GetResult() *ValidationResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *NodeValidationResult) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// ValidationProgress tracks overall progress
type ValidationProgress struct {
	state          protoimpl.MessageState        `protogen:"open.v1"`
	TotalNodes     int32                         `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	CompletedNodes int32                         `protobuf:"varint,2,opt,name=completed_nodes,json=completedNodes,proto3" json:"completed_nodes,omitempty"`
	FailedNodes    int32                         `protobuf:"varint,3,opt,name=failed_nodes,json=failedNodes,proto3" json:"failed_nodes,omitempty"`
	PendingNodes   int32                         `protobuf:"varint,4,opt,name=pending_nodes,json=pendingNodes,proto3" json:"pending_nodes,omitempty"`
	NodeStatuses   map[string]*NodeScannerStatus `protobuf:"bytes,5,rep,name=node_statuses,json=nodeStatuses,proto3" json:"node_statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidationProgress) Reset() {
	*x = ValidationProgress{}
	mi := &file_cel_v1_cel_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationProgress) ProtoMessage() {}

func (x *ValidationProgress) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationProgress.ProtoReflect.Descriptor instead.
func (*ValidationProgress) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{24}
}

func (x *ValidationProgress) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *ValidationProgress) GetCompletedNodes() int32 {
	if x != nil {
		return x.CompletedNodes
	}
	return 0
}

func (x *ValidationProgress) GetFailedNodes() int32 {
	if x != nil {
		return x.FailedNodes
	}
	return 0
}

func (x *ValidationProgress) GetPendingNodes() int32 {
	if x != nil {
		return x.PendingNodes
	}
	return 0
}

func (x *ValidationProgress) GetNodeStatuses() map[string]*NodeScannerStatus {
	if x != nil {
		return x.NodeStatuses
	}
	return nil
}

// StreamError represents an error in the stream
type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"` // Optional: node where error occurred
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_cel_v1_cel_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{25}
}

func (x *StreamError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StreamError) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *StreamError) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// Chat Assistant Messages
type ChatAssistRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Message string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // User's chat message
	// Types that are valid to be assigned to Context:
	//
	//	*ChatAssistRequest_RuleContext
	//	*ChatAssistRequest_TestContext
	//	*ChatAssistRequest_ModificationContext
	Context isChatAssistRequest_Context `protobuf_oneof:"context"`
	// Optional: conversation ID to maintain context
	ConversationId string `protobuf:"bytes,5,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// Previous messages in the conversation for context
	PreviousMessages []*ConversationMessage `protobuf:"bytes,6,rep,name=previous_messages,json=previousMessages,proto3" json:"previous_messages,omitempty"`
	// Any existing rule being modified (for regeneration)
	ExistingRule  *CELRule `protobuf:"bytes,7,opt,name=existing_rule,json=existingRule,proto3" json:"existing_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatAssistRequest) Reset() {
	*x = ChatAssistRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatAssistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAssistRequest) ProtoMessage() {}

func (x *ChatAssistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAssistRequest.ProtoReflect.Descriptor instead.
func (*ChatAssistRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{26}
}

func (x *ChatAssistRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatAssistRequest) GetContext() isChatAssistRequest_Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ChatAssistRequest) GetRuleContext() *RuleGenerationContext {
	if x != nil {
		if x, ok := x.Context.(*ChatAssistRequest_RuleContext); ok {
			return x.RuleContext
		}
	}
	return nil
}

func (x *ChatAssistRequest) GetTestContext() *TestDataContext {
	if x != nil {
		if x, ok := x.Context.(*ChatAssistRequest_TestContext); ok {
			return x.TestContext
		}
	}
	return nil
}

func (x *ChatAssistRequest) GetModificationContext() *RuleModificationContext {
	if x != nil {
		if x, ok := x.Context.(*ChatAssistRequest_ModificationContext); ok {
			return x.ModificationContext
		}
	}
	return nil
}

func (x *ChatAssistRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatAssistRequest) GetPreviousMessages() []*ConversationMessage {
	if x != nil {
		return x.PreviousMessages
	}
	return nil
}

func (x *ChatAssistRequest) GetExistingRule() *CELRule {
	if x != nil {
		return x.ExistingRule
	}
	return nil
}

type isChatAssistRequest_Context interface {
	isChatAssistRequest_Context()
}

type ChatAssistRequest_RuleContext struct {
	// Context for rule generation
	RuleContext *RuleGenerationContext `protobuf:"bytes,2,opt,name=rule_context,json=ruleContext,proto3,oneof"`
}

type ChatAssistRequest_TestContext struct {
	// Test data for validation
	TestContext *TestDataContext `protobuf:"bytes,3,opt,name=test_context,json=testContext,proto3,oneof"`
}

type ChatAssistRequest_ModificationContext struct {
	// Rule modification context
	ModificationContext *RuleModificationContext `protobuf:"bytes,4,opt,name=modification_context,json=modificationContext,proto3,oneof"`
}

func (*ChatAssistRequest_RuleContext) isChatAssistRequest_Context() {}

func (*ChatAssistRequest_TestContext) isChatAssistRequest_Context() {}

func (*ChatAssistRequest_ModificationContext) isChatAssistRequest_Context() {}

type RuleGenerationContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target resource type
	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"` // e.g., "Pod", "Deployment"
	ApiVersion   string `protobuf:"bytes,2,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`       // e.g., "v1", "apps/v1"
	// What to validate
	ValidationIntent string `protobuf:"bytes,3,opt,name=validation_intent,json=validationIntent,proto3" json:"validation_intent,omitempty"` // e.g., "ensure pods have resource limits"
	// Whether to validate against live cluster
	UseLiveCluster bool `protobuf:"varint,4,opt,name=use_live_cluster,json=useLiveCluster,proto3" json:"use_live_cluster,omitempty"`
	// Namespace for live validation
	Namespace     string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleGenerationContext) Reset() {
	*x = RuleGenerationContext{}
	mi := &file_cel_v1_cel_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleGenerationContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleGenerationContext) ProtoMessage() {}

func (x *RuleGenerationContext) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleGenerationContext.ProtoReflect.Descriptor instead.
func (*RuleGenerationContext) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{27}
}

func (x *RuleGenerationContext) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *RuleGenerationContext) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *RuleGenerationContext) GetValidationIntent() string {
	if x != nil {
		return x.ValidationIntent
	}
	return ""
}

func (x *RuleGenerationContext) GetUseLiveCluster() bool {
	if x != nil {
		return x.UseLiveCluster
	}
	return false
}

func (x *RuleGenerationContext) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type TestDataContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Test data as JSON
	TestDataJson string `protobuf:"bytes,1,opt,name=test_data_json,json=testDataJson,proto3" json:"test_data_json,omitempty"`
	// Expected result for the test
	ExpectedResult bool `protobuf:"varint,2,opt,name=expected_result,json=expectedResult,proto3" json:"expected_result,omitempty"`
	// Description of what we're testing
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestDataContext) Reset() {
	*x = TestDataContext{}
	mi := &file_cel_v1_cel_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDataContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDataContext) ProtoMessage() {}

func (x *TestDataContext) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDataContext.ProtoReflect.Descriptor instead.
func (*TestDataContext) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{28}
}

func (x *TestDataContext) GetTestDataJson() string {
	if x != nil {
		return x.TestDataJson
	}
	return ""
}

func (x *TestDataContext) GetExpectedResult() bool {
	if x != nil {
		return x.ExpectedResult
	}
	return false
}

func (x *TestDataContext) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ChatAssistResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*ChatAssistResponse_Thinking
	//	*ChatAssistResponse_Rule
	//	*ChatAssistResponse_Validation
	//	*ChatAssistResponse_Text
	//	*ChatAssistResponse_Error
	//	*ChatAssistResponse_Resources
	//	*ChatAssistResponse_Question
	Content isChatAssistResponse_Content `protobuf_oneof:"content"`
	// Timestamp for ordering
	Timestamp     int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatAssistResponse) Reset() {
	*x = ChatAssistResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatAssistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAssistResponse) ProtoMessage() {}

func (x *ChatAssistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAssistResponse.ProtoReflect.Descriptor instead.
func (*ChatAssistResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{29}
}

func (x *ChatAssistResponse) GetContent() isChatAssistResponse_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatAssistResponse) GetThinking() *ThinkingMessage {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Thinking); ok {
			return x.Thinking
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetRule() *GeneratedRule {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Rule); ok {
			return x.Rule
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetValidation() *ValidationMessage {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Validation); ok {
			return x.Validation
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetText() *TextMessage {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetResources() *ResourcesFound {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Resources); ok {
			return x.Resources
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetQuestion() *QuestionMessage {
	if x != nil {
		if x, ok := x.Content.(*ChatAssistResponse_Question); ok {
			return x.Question
		}
	}
	return nil
}

func (x *ChatAssistResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type isChatAssistResponse_Content interface {
	isChatAssistResponse_Content()
}

type ChatAssistResponse_Thinking struct {
	// LLM is thinking/processing
	Thinking *ThinkingMessage `protobuf:"bytes,1,opt,name=thinking,proto3,oneof"`
}

type ChatAssistResponse_Rule struct {
	// Generated CEL rule
	Rule *GeneratedRule `protobuf:"bytes,2,opt,name=rule,proto3,oneof"`
}

type ChatAssistResponse_Validation struct {
	// Validation result
	Validation *ValidationMessage `protobuf:"bytes,3,opt,name=validation,proto3,oneof"`
}

type ChatAssistResponse_Text struct {
	// General text response
	Text *TextMessage `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type ChatAssistResponse_Error struct {
	// Error occurred
	Error *ErrorMessage `protobuf:"bytes,5,opt,name=error,proto3,oneof"`
}

type ChatAssistResponse_Resources struct {
	// Resource discovery result
	Resources *ResourcesFound `protobuf:"bytes,6,opt,name=resources,proto3,oneof"`
}

type ChatAssistResponse_Question struct {
	// AI asking for clarification
	Question *QuestionMessage `protobuf:"bytes,8,opt,name=question,proto3,oneof"`
}

func (*ChatAssistResponse_Thinking) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Rule) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Validation) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Text) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Error) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Resources) isChatAssistResponse_Content() {}

func (*ChatAssistResponse_Question) isChatAssistResponse_Content() {}

type ThinkingMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // What the LLM is currently doing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThinkingMessage) Reset() {
	*x = ThinkingMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThinkingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThinkingMessage) ProtoMessage() {}

func (x *ThinkingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThinkingMessage.ProtoReflect.Descriptor instead.
func (*ThinkingMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{30}
}

func (x *ThinkingMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GeneratedRule struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Expression      string                 `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`                                  // The CEL expression
	Explanation     string                 `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`                                // Human-readable explanation
	Variables       []string               `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty"`                                    // Variables used in the expression
	SuggestedInputs []*RuleInput           `protobuf:"bytes,4,rep,name=suggested_inputs,json=suggestedInputs,proto3" json:"suggested_inputs,omitempty"` // Suggested inputs for validation
	TestCases       []*RuleTestCase        `protobuf:"bytes,5,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`                   // Test cases for the rule
	Name            string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                              // Rule name
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GeneratedRule) Reset() {
	*x = GeneratedRule{}
	mi := &file_cel_v1_cel_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedRule) ProtoMessage() {}

func (x *GeneratedRule) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedRule.ProtoReflect.Descriptor instead.
func (*GeneratedRule) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{31}
}

func (x *GeneratedRule) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *GeneratedRule) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *GeneratedRule) GetVariables() []string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *GeneratedRule) GetSuggestedInputs() []*RuleInput {
	if x != nil {
		return x.SuggestedInputs
	}
	return nil
}

func (x *GeneratedRule) GetTestCases() []*RuleTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

func (x *GeneratedRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ValidationMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PassedCount   int32                  `protobuf:"varint,2,opt,name=passed_count,json=passedCount,proto3" json:"passed_count,omitempty"`
	FailedCount   int32                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	Details       []*ValidationDetail    `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationMessage) Reset() {
	*x = ValidationMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationMessage) ProtoMessage() {}

func (x *ValidationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationMessage.ProtoReflect.Descriptor instead.
func (*ValidationMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{32}
}

func (x *ValidationMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidationMessage) GetPassedCount() int32 {
	if x != nil {
		return x.PassedCount
	}
	return 0
}

func (x *ValidationMessage) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *ValidationMessage) GetDetails() []*ValidationDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type ValidationDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceName  string                 `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Passed        bool                   `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationDetail) Reset() {
	*x = ValidationDetail{}
	mi := &file_cel_v1_cel_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationDetail) ProtoMessage() {}

func (x *ValidationDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationDetail.ProtoReflect.Descriptor instead.
func (*ValidationDetail) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{33}
}

func (x *ValidationDetail) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ValidationDetail) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ValidationDetail) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *ValidationDetail) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TextMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "info", "warning", "suggestion"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{34}
}

func (x *TextMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Details       string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{35}
}

func (x *ErrorMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ErrorMessage) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ResourcesFound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceType  string                 `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Namespaces    []string               `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcesFound) Reset() {
	*x = ResourcesFound{}
	mi := &file_cel_v1_cel_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesFound) ProtoMessage() {}

func (x *ResourcesFound) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesFound.ProtoReflect.Descriptor instead.
func (*ResourcesFound) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{36}
}

func (x *ResourcesFound) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ResourcesFound) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ResourcesFound) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// Rule Library Messages
type CELRule struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Expression     string                 `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	Inputs         []*RuleInput           `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Tags           []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Category       string                 `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Severity       string                 `protobuf:"bytes,8,opt,name=severity,proto3" json:"severity,omitempty"` // low, medium, high, critical
	TestCases      []*RuleTestCase        `protobuf:"bytes,9,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
	Metadata       *RuleMetadata          `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IsVerified     bool                   `protobuf:"varint,11,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64                  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy      string                 `protobuf:"bytes,14,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LastModifiedBy string                 `protobuf:"bytes,15,opt,name=last_modified_by,json=lastModifiedBy,proto3" json:"last_modified_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CELRule) Reset() {
	*x = CELRule{}
	mi := &file_cel_v1_cel_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CELRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CELRule) ProtoMessage() {}

func (x *CELRule) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CELRule.ProtoReflect.Descriptor instead.
func (*CELRule) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{37}
}

func (x *CELRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CELRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CELRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CELRule) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *CELRule) GetInputs() []*RuleInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CELRule) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CELRule) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CELRule) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *CELRule) GetTestCases() []*RuleTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

func (x *CELRule) GetMetadata() *RuleMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CELRule) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *CELRule) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CELRule) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CELRule) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CELRule) GetLastModifiedBy() string {
	if x != nil {
		return x.LastModifiedBy
	}
	return ""
}

type RuleTestCase struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TestData        map[string]string      `protobuf:"bytes,4,rep,name=test_data,json=testData,proto3" json:"test_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Input variable name -> JSON data
	ExpectedResult  bool                   `protobuf:"varint,5,opt,name=expected_result,json=expectedResult,proto3" json:"expected_result,omitempty"`
	ExpectedMessage string                 `protobuf:"bytes,6,opt,name=expected_message,json=expectedMessage,proto3" json:"expected_message,omitempty"`
	IsPassing       bool                   `protobuf:"varint,7,opt,name=is_passing,json=isPassing,proto3" json:"is_passing,omitempty"`
	ActualResult    string                 `protobuf:"bytes,8,opt,name=actual_result,json=actualResult,proto3" json:"actual_result,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RuleTestCase) Reset() {
	*x = RuleTestCase{}
	mi := &file_cel_v1_cel_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTestCase) ProtoMessage() {}

func (x *RuleTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTestCase.ProtoReflect.Descriptor instead.
func (*RuleTestCase) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{38}
}

func (x *RuleTestCase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuleTestCase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleTestCase) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RuleTestCase) GetTestData() map[string]string {
	if x != nil {
		return x.TestData
	}
	return nil
}

func (x *RuleTestCase) GetExpectedResult() bool {
	if x != nil {
		return x.ExpectedResult
	}
	return false
}

func (x *RuleTestCase) GetExpectedMessage() string {
	if x != nil {
		return x.ExpectedMessage
	}
	return ""
}

func (x *RuleTestCase) GetIsPassing() bool {
	if x != nil {
		return x.IsPassing
	}
	return false
}

func (x *RuleTestCase) GetActualResult() string {
	if x != nil {
		return x.ActualResult
	}
	return ""
}

type RuleMetadata struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ComplianceFramework string                 `protobuf:"bytes,1,opt,name=compliance_framework,json=complianceFramework,proto3" json:"compliance_framework,omitempty"` // CIS, NIST, PCI-DSS, etc.
	References          []string               `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`                                              // Links to documentation
	Remediation         string                 `protobuf:"bytes,3,opt,name=remediation,proto3" json:"remediation,omitempty"`                                            // How to fix if rule fails
	Platforms           []string               `protobuf:"bytes,4,rep,name=platforms,proto3" json:"platforms,omitempty"`                                                // kubernetes, openshift, etc.
	CustomFields        map[string]string      `protobuf:"bytes,5,rep,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RuleMetadata) Reset() {
	*x = RuleMetadata{}
	mi := &file_cel_v1_cel_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleMetadata) ProtoMessage() {}

func (x *RuleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleMetadata.ProtoReflect.Descriptor instead.
func (*RuleMetadata) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{39}
}

func (x *RuleMetadata) GetComplianceFramework() string {
	if x != nil {
		return x.ComplianceFramework
	}
	return ""
}

func (x *RuleMetadata) GetReferences() []string {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *RuleMetadata) GetRemediation() string {
	if x != nil {
		return x.Remediation
	}
	return ""
}

func (x *RuleMetadata) GetPlatforms() []string {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *RuleMetadata) GetCustomFields() map[string]string {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

// Save Rule
type SaveRuleRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Rule               *CELRule               `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	ValidateBeforeSave bool                   `protobuf:"varint,2,opt,name=validate_before_save,json=validateBeforeSave,proto3" json:"validate_before_save,omitempty"`
	RunTestCases       bool                   `protobuf:"varint,3,opt,name=run_test_cases,json=runTestCases,proto3" json:"run_test_cases,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SaveRuleRequest) Reset() {
	*x = SaveRuleRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRuleRequest) ProtoMessage() {}

func (x *SaveRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRuleRequest.ProtoReflect.Descriptor instead.
func (*SaveRuleRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{40}
}

func (x *SaveRuleRequest) GetRule() *CELRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *SaveRuleRequest) GetValidateBeforeSave() bool {
	if x != nil {
		return x.ValidateBeforeSave
	}
	return false
}

func (x *SaveRuleRequest) GetRunTestCases() bool {
	if x != nil {
		return x.RunTestCases
	}
	return false
}

type SaveRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	TestResults   []*TestCaseResult      `protobuf:"bytes,4,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveRuleResponse) Reset() {
	*x = SaveRuleResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRuleResponse) ProtoMessage() {}

func (x *SaveRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRuleResponse.ProtoReflect.Descriptor instead.
func (*SaveRuleResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{41}
}

func (x *SaveRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SaveRuleResponse) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *SaveRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SaveRuleResponse) GetTestResults() []*TestCaseResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

// Get Rule
type GetRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{42}
}

func (x *GetRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type GetRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *CELRule               `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleResponse) Reset() {
	*x = GetRuleResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleResponse) ProtoMessage() {}

func (x *GetRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleResponse.ProtoReflect.Descriptor instead.
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{43}
}

func (x *GetRuleResponse) GetRule() *CELRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *GetRuleResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

// List Rules
type ListRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter        *ListRulesFilter       `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"` // name, created_at, updated_at, severity
	Ascending     bool                   `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesRequest) Reset() {
	*x = ListRulesRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesRequest) ProtoMessage() {}

func (x *ListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesRequest.ProtoReflect.Descriptor instead.
func (*ListRulesRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{44}
}

func (x *ListRulesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRulesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRulesRequest) GetFilter() *ListRulesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListRulesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListRulesRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type ListRulesFilter struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Tags                []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Category            string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Severity            string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	SearchText          string                 `protobuf:"bytes,4,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	VerifiedOnly        bool                   `protobuf:"varint,5,opt,name=verified_only,json=verifiedOnly,proto3" json:"verified_only,omitempty"`
	ComplianceFramework string                 `protobuf:"bytes,6,opt,name=compliance_framework,json=complianceFramework,proto3" json:"compliance_framework,omitempty"`
	ResourceType        string                 `protobuf:"bytes,7,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListRulesFilter) Reset() {
	*x = ListRulesFilter{}
	mi := &file_cel_v1_cel_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesFilter) ProtoMessage() {}

func (x *ListRulesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesFilter.ProtoReflect.Descriptor instead.
func (*ListRulesFilter) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{45}
}

func (x *ListRulesFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListRulesFilter) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListRulesFilter) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ListRulesFilter) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *ListRulesFilter) GetVerifiedOnly() bool {
	if x != nil {
		return x.VerifiedOnly
	}
	return false
}

func (x *ListRulesFilter) GetComplianceFramework() string {
	if x != nil {
		return x.ComplianceFramework
	}
	return ""
}

func (x *ListRulesFilter) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type ListRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*CELRule             `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulesResponse) Reset() {
	*x = ListRulesResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulesResponse) ProtoMessage() {}

func (x *ListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulesResponse.ProtoReflect.Descriptor instead.
func (*ListRulesResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{46}
}

func (x *ListRulesResponse) GetRules() []*CELRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListRulesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRulesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Update Rule
type UpdateRuleRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Rule                 *CELRule               `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	ValidateBeforeUpdate bool                   `protobuf:"varint,2,opt,name=validate_before_update,json=validateBeforeUpdate,proto3" json:"validate_before_update,omitempty"`
	RunTestCases         bool                   `protobuf:"varint,3,opt,name=run_test_cases,json=runTestCases,proto3" json:"run_test_cases,omitempty"`
	UpdateFields         []string               `protobuf:"bytes,4,rep,name=update_fields,json=updateFields,proto3" json:"update_fields,omitempty"` // Which fields to update
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateRuleRequest) GetRule() *CELRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *UpdateRuleRequest) GetValidateBeforeUpdate() bool {
	if x != nil {
		return x.ValidateBeforeUpdate
	}
	return false
}

func (x *UpdateRuleRequest) GetRunTestCases() bool {
	if x != nil {
		return x.RunTestCases
	}
	return false
}

func (x *UpdateRuleRequest) GetUpdateFields() []string {
	if x != nil {
		return x.UpdateFields
	}
	return nil
}

type UpdateRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	TestResults   []*TestCaseResult      `protobuf:"bytes,3,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleResponse) Reset() {
	*x = UpdateRuleResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleResponse) ProtoMessage() {}

func (x *UpdateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpdateRuleResponse) GetTestResults() []*TestCaseResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

// Delete Rule
type DeleteRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Export Rules
type ExportRulesRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RuleIds          []string               `protobuf:"bytes,1,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"` // Empty means export all
	Format           ExportFormat           `protobuf:"varint,2,opt,name=format,proto3,enum=cel.v1.ExportFormat" json:"format,omitempty"`
	Filter           *ListRulesFilter       `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"` // Alternative to rule_ids
	IncludeTestCases bool                   `protobuf:"varint,4,opt,name=include_test_cases,json=includeTestCases,proto3" json:"include_test_cases,omitempty"`
	IncludeMetadata  bool                   `protobuf:"varint,5,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExportRulesRequest) Reset() {
	*x = ExportRulesRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRulesRequest) ProtoMessage() {}

func (x *ExportRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRulesRequest.ProtoReflect.Descriptor instead.
func (*ExportRulesRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{51}
}

func (x *ExportRulesRequest) GetRuleIds() []string {
	if x != nil {
		return x.RuleIds
	}
	return nil
}

func (x *ExportRulesRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportRulesRequest) GetFilter() *ListRulesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ExportRulesRequest) GetIncludeTestCases() bool {
	if x != nil {
		return x.IncludeTestCases
	}
	return false
}

func (x *ExportRulesRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

type ExportRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // The exported data
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	RuleCount     int32                  `protobuf:"varint,5,opt,name=rule_count,json=ruleCount,proto3" json:"rule_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRulesResponse) Reset() {
	*x = ExportRulesResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRulesResponse) ProtoMessage() {}

func (x *ExportRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRulesResponse.ProtoReflect.Descriptor instead.
func (*ExportRulesResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{52}
}

func (x *ExportRulesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExportRulesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExportRulesResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExportRulesResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *ExportRulesResponse) GetRuleCount() int32 {
	if x != nil {
		return x.RuleCount
	}
	return 0
}

// Import Rules
type ImportRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Format        ImportFormat           `protobuf:"varint,2,opt,name=format,proto3,enum=cel.v1.ImportFormat" json:"format,omitempty"`
	Options       *ImportOptions         `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportRulesRequest) Reset() {
	*x = ImportRulesRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRulesRequest) ProtoMessage() {}

func (x *ImportRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRulesRequest.ProtoReflect.Descriptor instead.
func (*ImportRulesRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{53}
}

func (x *ImportRulesRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ImportRulesRequest) GetFormat() ImportFormat {
	if x != nil {
		return x.Format
	}
	return ImportFormat_IMPORT_FORMAT_UNSPECIFIED
}

func (x *ImportRulesRequest) GetOptions() *ImportOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ImportOptions struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OverwriteExisting bool                   `protobuf:"varint,1,opt,name=overwrite_existing,json=overwriteExisting,proto3" json:"overwrite_existing,omitempty"`
	ValidateAll       bool                   `protobuf:"varint,2,opt,name=validate_all,json=validateAll,proto3" json:"validate_all,omitempty"`
	RunTestCases      bool                   `protobuf:"varint,3,opt,name=run_test_cases,json=runTestCases,proto3" json:"run_test_cases,omitempty"`
	SkipOnError       bool                   `protobuf:"varint,4,opt,name=skip_on_error,json=skipOnError,proto3" json:"skip_on_error,omitempty"`
	TagsToAdd         []string               `protobuf:"bytes,5,rep,name=tags_to_add,json=tagsToAdd,proto3" json:"tags_to_add,omitempty"`
	CategoryOverride  string                 `protobuf:"bytes,6,opt,name=category_override,json=categoryOverride,proto3" json:"category_override,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ImportOptions) Reset() {
	*x = ImportOptions{}
	mi := &file_cel_v1_cel_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportOptions) ProtoMessage() {}

func (x *ImportOptions) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportOptions.ProtoReflect.Descriptor instead.
func (*ImportOptions) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{54}
}

func (x *ImportOptions) GetOverwriteExisting() bool {
	if x != nil {
		return x.OverwriteExisting
	}
	return false
}

func (x *ImportOptions) GetValidateAll() bool {
	if x != nil {
		return x.ValidateAll
	}
	return false
}

func (x *ImportOptions) GetRunTestCases() bool {
	if x != nil {
		return x.RunTestCases
	}
	return false
}

func (x *ImportOptions) GetSkipOnError() bool {
	if x != nil {
		return x.SkipOnError
	}
	return false
}

func (x *ImportOptions) GetTagsToAdd() []string {
	if x != nil {
		return x.TagsToAdd
	}
	return nil
}

func (x *ImportOptions) GetCategoryOverride() string {
	if x != nil {
		return x.CategoryOverride
	}
	return ""
}

type ImportRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ImportedCount int32                  `protobuf:"varint,3,opt,name=imported_count,json=importedCount,proto3" json:"imported_count,omitempty"`
	SkippedCount  int32                  `protobuf:"varint,4,opt,name=skipped_count,json=skippedCount,proto3" json:"skipped_count,omitempty"`
	FailedCount   int32                  `protobuf:"varint,5,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	Results       []*ImportResult        `protobuf:"bytes,6,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportRulesResponse) Reset() {
	*x = ImportRulesResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportRulesResponse) ProtoMessage() {}

func (x *ImportRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportRulesResponse.ProtoReflect.Descriptor instead.
func (*ImportRulesResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{55}
}

func (x *ImportRulesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ImportRulesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ImportRulesResponse) GetImportedCount() int32 {
	if x != nil {
		return x.ImportedCount
	}
	return 0
}

func (x *ImportRulesResponse) GetSkippedCount() int32 {
	if x != nil {
		return x.SkippedCount
	}
	return 0
}

func (x *ImportRulesResponse) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *ImportRulesResponse) GetResults() []*ImportResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ImportResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleName      string                 `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	RuleId        string                 `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportResult) Reset() {
	*x = ImportResult{}
	mi := &file_cel_v1_cel_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportResult) ProtoMessage() {}

func (x *ImportResult) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportResult.ProtoReflect.Descriptor instead.
func (*ImportResult) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{56}
}

func (x *ImportResult) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *ImportResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ImportResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ImportResult) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

// Validate Rule with Test Cases
type ValidateRuleWithTestCasesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Rule              *CELRule               `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	RunAgainstCluster bool                   `protobuf:"varint,2,opt,name=run_against_cluster,json=runAgainstCluster,proto3" json:"run_against_cluster,omitempty"`
	Namespace         string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ValidateRuleWithTestCasesRequest) Reset() {
	*x = ValidateRuleWithTestCasesRequest{}
	mi := &file_cel_v1_cel_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRuleWithTestCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuleWithTestCasesRequest) ProtoMessage() {}

func (x *ValidateRuleWithTestCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuleWithTestCasesRequest.ProtoReflect.Descriptor instead.
func (*ValidateRuleWithTestCasesRequest) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{57}
}

func (x *ValidateRuleWithTestCasesRequest) GetRule() *CELRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *ValidateRuleWithTestCasesRequest) GetRunAgainstCluster() bool {
	if x != nil {
		return x.RunAgainstCluster
	}
	return false
}

func (x *ValidateRuleWithTestCasesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ValidateRuleWithTestCasesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AllPassed      bool                   `protobuf:"varint,1,opt,name=all_passed,json=allPassed,proto3" json:"all_passed,omitempty"`
	TestResults    []*TestCaseResult      `protobuf:"bytes,2,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	ClusterResults []*ValidationResult    `protobuf:"bytes,3,rep,name=cluster_results,json=clusterResults,proto3" json:"cluster_results,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidateRuleWithTestCasesResponse) Reset() {
	*x = ValidateRuleWithTestCasesResponse{}
	mi := &file_cel_v1_cel_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRuleWithTestCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRuleWithTestCasesResponse) ProtoMessage() {}

func (x *ValidateRuleWithTestCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRuleWithTestCasesResponse.ProtoReflect.Descriptor instead.
func (*ValidateRuleWithTestCasesResponse) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{58}
}

func (x *ValidateRuleWithTestCasesResponse) GetAllPassed() bool {
	if x != nil {
		return x.AllPassed
	}
	return false
}

func (x *ValidateRuleWithTestCasesResponse) GetTestResults() []*TestCaseResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

func (x *ValidateRuleWithTestCasesResponse) GetClusterResults() []*ValidationResult {
	if x != nil {
		return x.ClusterResults
	}
	return nil
}

type TestCaseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestCaseId    string                 `protobuf:"bytes,1,opt,name=test_case_id,json=testCaseId,proto3" json:"test_case_id,omitempty"`
	TestCaseName  string                 `protobuf:"bytes,2,opt,name=test_case_name,json=testCaseName,proto3" json:"test_case_name,omitempty"`
	Passed        bool                   `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty"`
	ActualResult  string                 `protobuf:"bytes,4,opt,name=actual_result,json=actualResult,proto3" json:"actual_result,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	DurationMs    int64                  `protobuf:"varint,6,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCaseResult) Reset() {
	*x = TestCaseResult{}
	mi := &file_cel_v1_cel_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseResult) ProtoMessage() {}

func (x *TestCaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseResult.ProtoReflect.Descriptor instead.
func (*TestCaseResult) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{59}
}

func (x *TestCaseResult) GetTestCaseId() string {
	if x != nil {
		return x.TestCaseId
	}
	return ""
}

func (x *TestCaseResult) GetTestCaseName() string {
	if x != nil {
		return x.TestCaseName
	}
	return ""
}

func (x *TestCaseResult) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *TestCaseResult) GetActualResult() string {
	if x != nil {
		return x.ActualResult
	}
	return ""
}

func (x *TestCaseResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TestCaseResult) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// Rule Modification Context (added to existing ChatAssistRequest)
type RuleModificationContext struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RuleId             string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`                                     // ID of rule to modify
	CurrentRule        *CELRule               `protobuf:"bytes,2,opt,name=current_rule,json=currentRule,proto3" json:"current_rule,omitempty"`                      // Current rule definition
	ModificationIntent string                 `protobuf:"bytes,3,opt,name=modification_intent,json=modificationIntent,proto3" json:"modification_intent,omitempty"` // What to change
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RuleModificationContext) Reset() {
	*x = RuleModificationContext{}
	mi := &file_cel_v1_cel_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleModificationContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleModificationContext) ProtoMessage() {}

func (x *RuleModificationContext) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleModificationContext.ProtoReflect.Descriptor instead.
func (*RuleModificationContext) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{60}
}

func (x *RuleModificationContext) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *RuleModificationContext) GetCurrentRule() *CELRule {
	if x != nil {
		return x.CurrentRule
	}
	return nil
}

func (x *RuleModificationContext) GetModificationIntent() string {
	if x != nil {
		return x.ModificationIntent
	}
	return ""
}

// Message for conversation history
type ConversationMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Role      string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` // "user", "assistant", "system"
	Content   string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// If this message contained a rule
	Rule          *GeneratedRule `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationMessage) Reset() {
	*x = ConversationMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMessage) ProtoMessage() {}

func (x *ConversationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMessage.ProtoReflect.Descriptor instead.
func (*ConversationMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{61}
}

func (x *ConversationMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ConversationMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ConversationMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConversationMessage) GetRule() *GeneratedRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// AI asking for clarification
type QuestionMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"` // The question text
	Options       []string               `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`   // Optional: suggested answers
	Context       string                 `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`   // What the AI needs this for
	Type          QuestionType           `protobuf:"varint,4,opt,name=type,proto3,enum=cel.v1.QuestionType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionMessage) Reset() {
	*x = QuestionMessage{}
	mi := &file_cel_v1_cel_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionMessage) ProtoMessage() {}

func (x *QuestionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cel_v1_cel_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionMessage.ProtoReflect.Descriptor instead.
func (*QuestionMessage) Descriptor() ([]byte, []int) {
	return file_cel_v1_cel_proto_rawDescGZIP(), []int{62}
}

func (x *QuestionMessage) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionMessage) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *QuestionMessage) GetType() QuestionType {
	if x != nil {
		return x.Type
	}
	return QuestionType_QUESTION_TYPE_UNSPECIFIED
}

var File_cel_v1_cel_proto protoreflect.FileDescriptor

const file_cel_v1_cel_proto_rawDesc = "" +
	"\n" +
	"\x10cel/v1/cel.proto\x12\x06cel.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x94\x01\n" +
	"\x12ValidateCELRequest\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\tR\n" +
	"expression\x123\n" +
	"\n" +
	"test_cases\x18\x02 \x03(\v2\x14.cel.v1.RuleTestCaseR\ttestCases\x12)\n" +
	"\x06inputs\x18\x03 \x03(\v2\x11.cel.v1.RuleInputR\x06inputs\"\xba\x01\n" +
	"\tRuleInput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\n" +
	"kubernetes\x18\x02 \x01(\v2\x17.cel.v1.KubernetesInputH\x00R\n" +
	"kubernetes\x12'\n" +
	"\x04file\x18\x03 \x01(\v2\x11.cel.v1.FileInputH\x00R\x04file\x12'\n" +
	"\x04http\x18\x04 \x01(\v2\x11.cel.v1.HttpInputH\x00R\x04httpB\f\n" +
	"\n" +
	"input_type\"\xbb\x01\n" +
	"\x0fKubernetesInput\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bresource\x18\x03 \x01(\tR\bresource\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12#\n" +
	"\rresource_name\x18\x05 \x01(\tR\fresourceName\x12\x19\n" +
	"\blist_all\x18\x06 \x01(\bR\alistAll\"\xa1\x02\n" +
	"\tFileInput\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x1c\n" +
	"\trecursive\x18\x03 \x01(\bR\trecursive\x12+\n" +
	"\x11check_permissions\x18\x04 \x01(\bR\x10checkPermissions\x12;\n" +
	"\rnode_selector\x18\x05 \x01(\v2\x14.cel.v1.NodeSelectorH\x00R\fnodeSelector\x12\x1d\n" +
	"\tall_nodes\x18\x06 \x01(\bH\x00R\ballNodes\x127\n" +
	"\vaccess_mode\x18\a \x01(\x0e2\x16.cel.v1.FileAccessModeR\n" +
	"accessModeB\b\n" +
	"\x06target\"\xcd\x01\n" +
	"\fNodeSelector\x12\x1d\n" +
	"\n" +
	"node_names\x18\x01 \x03(\tR\tnodeNames\x128\n" +
	"\x06labels\x18\x02 \x03(\v2 .cel.v1.NodeSelector.LabelsEntryR\x06labels\x12)\n" +
	"\x10taints_tolerated\x18\x03 \x03(\tR\x0ftaintsTolerated\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x01\n" +
	"\tHttpInput\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x128\n" +
	"\aheaders\x18\x03 \x03(\v2\x1e.cel.v1.HttpInput.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\x12ValidationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x122\n" +
	"\aresults\x18\x02 \x03(\v2\x18.cel.v1.ValidationResultR\aresults\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12<\n" +
	"\vperformance\x18\x04 \x01(\v2\x1a.cel.v1.PerformanceMetricsR\vperformance\"\xd8\x02\n" +
	"\x10ValidationResult\x12\x1b\n" +
	"\ttest_case\x18\x01 \x01(\tR\btestCase\x12\x16\n" +
	"\x06passed\x18\x02 \x01(\bR\x06passed\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x18\n" +
	"\adetails\x18\x04 \x01(\tR\adetails\x129\n" +
	"\rresource_info\x18\x05 \x01(\v2\x14.cel.v1.ResourceInfoR\fresourceInfo\x12^\n" +
	"\x12evaluation_context\x18\x06 \x03(\v2/.cel.v1.ValidationResult.EvaluationContextEntryR\x11evaluationContext\x1aD\n" +
	"\x16EvaluationContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\fResourceInfo\x12\x1f\n" +
	"\vapi_version\x18\x01 \x01(\tR\n" +
	"apiVersion\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03uid\x18\x05 \x01(\tR\x03uid\"\x89\x01\n" +
	"\x12PerformanceMetrics\x12\"\n" +
	"\rtotal_time_ms\x18\x01 \x01(\x03R\vtotalTimeMs\x12&\n" +
	"\x0faverage_time_ms\x18\x02 \x01(\x03R\raverageTimeMs\x12'\n" +
	"\x0fresources_count\x18\x03 \x01(\x05R\x0eresourcesCount\"\xc7\x01\n" +
	"\x18DiscoverResourcesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12%\n" +
	"\x0eresource_types\x18\x02 \x03(\tR\rresourceTypes\x122\n" +
	"\vgvr_filters\x18\x03 \x03(\v2\x11.cel.v1.GVRFilterR\n" +
	"gvrFilters\x122\n" +
	"\aoptions\x18\x04 \x01(\v2\x18.cel.v1.DiscoveryOptionsR\aoptions\"\x91\x01\n" +
	"\x10DiscoveryOptions\x12#\n" +
	"\rinclude_count\x18\x01 \x01(\bR\fincludeCount\x12'\n" +
	"\x0finclude_samples\x18\x02 \x01(\bR\x0eincludeSamples\x12/\n" +
	"\x14max_samples_per_type\x18\x03 \x01(\x05R\x11maxSamplesPerType\"W\n" +
	"\tGVRFilter\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bresource\x18\x03 \x01(\tR\bresource\"\x85\x01\n" +
	"\x19ResourceDiscoveryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x128\n" +
	"\tresources\x18\x02 \x03(\v2\x1a.cel.v1.DiscoveredResourceR\tresources\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xc3\x01\n" +
	"\x12DiscoveredResource\x12\x1f\n" +
	"\vapi_version\x18\x01 \x01(\tR\n" +
	"apiVersion\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05count\x18\x05 \x01(\x05R\x05count\x120\n" +
	"\asamples\x18\x06 \x03(\v2\x16.cel.v1.ResourceSampleR\asamples\"\xf4\x01\n" +
	"\x0eResourceSample\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12:\n" +
	"\x06labels\x18\x03 \x03(\v2\".cel.v1.ResourceSample.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x01\n" +
	"\tAgentTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1c\n" +
	"\tobjective\x18\x03 \x01(\tR\tobjective\x12!\n" +
	"\fcontext_json\x18\x04 \x01(\tR\vcontextJson\x12A\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2!.cel.v1.AgentTask.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x01\n" +
	"\x15AgentExecutionRequest\x12%\n" +
	"\x04task\x18\x01 \x01(\v2\x11.cel.v1.AgentTaskR\x04task\x12\x1d\n" +
	"\n" +
	"agent_role\x18\x02 \x01(\tR\tagentRole\x12,\n" +
	"\x12use_cel_validation\x18\x03 \x01(\bR\x10useCelValidation\"\xa9\x01\n" +
	"\x16AgentExecutionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vresult_json\x18\x02 \x01(\tR\n" +
	"resultJson\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x12\n" +
	"\x04logs\x18\x04 \x03(\tR\x04logs\x12*\n" +
	"\x11execution_time_ms\x18\x05 \x01(\x03R\x0fexecutionTimeMs\"\xa5\x01\n" +
	"\x18ValidateCELStreamRequest\x12K\n" +
	"\x12validation_request\x18\x01 \x01(\v2\x1a.cel.v1.ValidateCELRequestH\x00R\x11validationRequest\x121\n" +
	"\acontrol\x18\x02 \x01(\v2\x15.cel.v1.StreamControlH\x00R\acontrolB\t\n" +
	"\arequest\"\xa6\x01\n" +
	"\rStreamControl\x124\n" +
	"\x06action\x18\x01 \x01(\x0e2\x1c.cel.v1.StreamControl.ActionR\x06action\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x15\n" +
	"\x06job_id\x18\x03 \x01(\tR\x05jobId\"+\n" +
	"\x06Action\x12\n" +
	"\n" +
	"\x06CANCEL\x10\x00\x12\t\n" +
	"\x05PAUSE\x10\x01\x12\n" +
	"\n" +
	"\x06RESUME\x10\x02\"\x8d\x02\n" +
	"\x19ValidateCELStreamResponse\x12<\n" +
	"\vnode_status\x18\x01 \x01(\v2\x19.cel.v1.NodeScannerStatusH\x00R\n" +
	"nodeStatus\x12?\n" +
	"\vnode_result\x18\x02 \x01(\v2\x1c.cel.v1.NodeValidationResultH\x00R\n" +
	"nodeResult\x128\n" +
	"\bprogress\x18\x03 \x01(\v2\x1a.cel.v1.ValidationProgressH\x00R\bprogress\x12+\n" +
	"\x05error\x18\x04 \x01(\v2\x13.cel.v1.StreamErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"\x96\x02\n" +
	"\x11NodeScannerStatus\x12\x1b\n" +
	"\tnode_name\x18\x01 \x01(\tR\bnodeName\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x128\n" +
	"\x06status\x18\x03 \x01(\x0e2 .cel.v1.NodeScannerStatus.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"[\n" +
	"\x06Status\x12\v\n" +
	"\aPENDING\x10\x00\x12\r\n" +
	"\tSCHEDULED\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\r\n" +
	"\tCANCELLED\x10\x05\"\xda\x01\n" +
	"\x14NodeValidationResult\x12\x1b\n" +
	"\tnode_name\x18\x01 \x01(\tR\bnodeName\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\x12\x1e\n" +
	"\n" +
	"expression\x18\x04 \x01(\tR\n" +
	"expression\x120\n" +
	"\x06result\x18\x05 \x01(\v2\x18.cel.v1.ValidationResultR\x06result\x12\x1f\n" +
	"\vduration_ms\x18\x06 \x01(\x03R\n" +
	"durationMs\"\xd5\x02\n" +
	"\x12ValidationProgress\x12\x1f\n" +
	"\vtotal_nodes\x18\x01 \x01(\x05R\n" +
	"totalNodes\x12'\n" +
	"\x0fcompleted_nodes\x18\x02 \x01(\x05R\x0ecompletedNodes\x12!\n" +
	"\ffailed_nodes\x18\x03 \x01(\x05R\vfailedNodes\x12#\n" +
	"\rpending_nodes\x18\x04 \x01(\x05R\fpendingNodes\x12Q\n" +
	"\rnode_statuses\x18\x05 \x03(\v2,.cel.v1.ValidationProgress.NodeStatusesEntryR\fnodeStatuses\x1aZ\n" +
	"\x11NodeStatusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.cel.v1.NodeScannerStatusR\x05value:\x028\x01\"Z\n" +
	"\vStreamError\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"\xb9\x03\n" +
	"\x11ChatAssistRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12B\n" +
	"\frule_context\x18\x02 \x01(\v2\x1d.cel.v1.RuleGenerationContextH\x00R\vruleContext\x12<\n" +
	"\ftest_context\x18\x03 \x01(\v2\x17.cel.v1.TestDataContextH\x00R\vtestContext\x12T\n" +
	"\x14modification_context\x18\x04 \x01(\v2\x1f.cel.v1.RuleModificationContextH\x00R\x13modificationContext\x12'\n" +
	"\x0fconversation_id\x18\x05 \x01(\tR\x0econversationId\x12H\n" +
	"\x11previous_messages\x18\x06 \x03(\v2\x1b.cel.v1.ConversationMessageR\x10previousMessages\x124\n" +
	"\rexisting_rule\x18\a \x01(\v2\x0f.cel.v1.CELRuleR\fexistingRuleB\t\n" +
	"\acontext\"\xd2\x01\n" +
	"\x15RuleGenerationContext\x12#\n" +
	"\rresource_type\x18\x01 \x01(\tR\fresourceType\x12\x1f\n" +
	"\vapi_version\x18\x02 \x01(\tR\n" +
	"apiVersion\x12+\n" +
	"\x11validation_intent\x18\x03 \x01(\tR\x10validationIntent\x12(\n" +
	"\x10use_live_cluster\x18\x04 \x01(\bR\x0euseLiveCluster\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\"\x82\x01\n" +
	"\x0fTestDataContext\x12$\n" +
	"\x0etest_data_json\x18\x01 \x01(\tR\ftestDataJson\x12'\n" +
	"\x0fexpected_result\x18\x02 \x01(\bR\x0eexpectedResult\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\xa6\x03\n" +
	"\x12ChatAssistResponse\x125\n" +
	"\bthinking\x18\x01 \x01(\v2\x17.cel.v1.ThinkingMessageH\x00R\bthinking\x12+\n" +
	"\x04rule\x18\x02 \x01(\v2\x15.cel.v1.GeneratedRuleH\x00R\x04rule\x12;\n" +
	"\n" +
	"validation\x18\x03 \x01(\v2\x19.cel.v1.ValidationMessageH\x00R\n" +
	"validation\x12)\n" +
	"\x04text\x18\x04 \x01(\v2\x13.cel.v1.TextMessageH\x00R\x04text\x12,\n" +
	"\x05error\x18\x05 \x01(\v2\x14.cel.v1.ErrorMessageH\x00R\x05error\x126\n" +
	"\tresources\x18\x06 \x01(\v2\x16.cel.v1.ResourcesFoundH\x00R\tresources\x125\n" +
	"\bquestion\x18\b \x01(\v2\x17.cel.v1.QuestionMessageH\x00R\bquestion\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestampB\t\n" +
	"\acontent\"+\n" +
	"\x0fThinkingMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xf6\x01\n" +
	"\rGeneratedRule\x12\x1e\n" +
	"\n" +
	"expression\x18\x01 \x01(\tR\n" +
	"expression\x12 \n" +
	"\vexplanation\x18\x02 \x01(\tR\vexplanation\x12\x1c\n" +
	"\tvariables\x18\x03 \x03(\tR\tvariables\x12<\n" +
	"\x10suggested_inputs\x18\x04 \x03(\v2\x11.cel.v1.RuleInputR\x0fsuggestedInputs\x123\n" +
	"\n" +
	"test_cases\x18\x05 \x03(\v2\x14.cel.v1.RuleTestCaseR\ttestCases\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\"\xa7\x01\n" +
	"\x11ValidationMessage\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fpassed_count\x18\x02 \x01(\x05R\vpassedCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x05R\vfailedCount\x122\n" +
	"\adetails\x18\x04 \x03(\v2\x18.cel.v1.ValidationDetailR\adetails\"\x85\x01\n" +
	"\x10ValidationDetail\x12#\n" +
	"\rresource_name\x18\x01 \x01(\tR\fresourceName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06passed\x18\x03 \x01(\bR\x06passed\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"5\n" +
	"\vTextMessage\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\">\n" +
	"\fErrorMessage\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12\x18\n" +
	"\adetails\x18\x02 \x01(\tR\adetails\"k\n" +
	"\x0eResourcesFound\x12#\n" +
	"\rresource_type\x18\x01 \x01(\tR\fresourceType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x03 \x03(\tR\n" +
	"namespaces\"\xf5\x03\n" +
	"\aCELRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"expression\x18\x04 \x01(\tR\n" +
	"expression\x12)\n" +
	"\x06inputs\x18\x05 \x03(\v2\x11.cel.v1.RuleInputR\x06inputs\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x1a\n" +
	"\bcategory\x18\a \x01(\tR\bcategory\x12\x1a\n" +
	"\bseverity\x18\b \x01(\tR\bseverity\x123\n" +
	"\n" +
	"test_cases\x18\t \x03(\v2\x14.cel.v1.RuleTestCaseR\ttestCases\x120\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x14.cel.v1.RuleMetadataR\bmetadata\x12\x1f\n" +
	"\vis_verified\x18\v \x01(\bR\n" +
	"isVerified\x12\x1d\n" +
	"\n" +
	"created_at\x18\f \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\r \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x0e \x01(\tR\tcreatedBy\x12(\n" +
	"\x10last_modified_by\x18\x0f \x01(\tR\x0elastModifiedBy\"\xea\x02\n" +
	"\fRuleTestCase\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12?\n" +
	"\ttest_data\x18\x04 \x03(\v2\".cel.v1.RuleTestCase.TestDataEntryR\btestData\x12'\n" +
	"\x0fexpected_result\x18\x05 \x01(\bR\x0eexpectedResult\x12)\n" +
	"\x10expected_message\x18\x06 \x01(\tR\x0fexpectedMessage\x12\x1d\n" +
	"\n" +
	"is_passing\x18\a \x01(\bR\tisPassing\x12#\n" +
	"\ractual_result\x18\b \x01(\tR\factualResult\x1a;\n" +
	"\rTestDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\fRuleMetadata\x121\n" +
	"\x14compliance_framework\x18\x01 \x01(\tR\x13complianceFramework\x12\x1e\n" +
	"\n" +
	"references\x18\x02 \x03(\tR\n" +
	"references\x12 \n" +
	"\vremediation\x18\x03 \x01(\tR\vremediation\x12\x1c\n" +
	"\tplatforms\x18\x04 \x03(\tR\tplatforms\x12K\n" +
	"\rcustom_fields\x18\x05 \x03(\v2&.cel.v1.RuleMetadata.CustomFieldsEntryR\fcustomFields\x1a?\n" +
	"\x11CustomFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x01\n" +
	"\x0fSaveRuleRequest\x12#\n" +
	"\x04rule\x18\x01 \x01(\v2\x0f.cel.v1.CELRuleR\x04rule\x120\n" +
	"\x14validate_before_save\x18\x02 \x01(\bR\x12validateBeforeSave\x12$\n" +
	"\x0erun_test_cases\x18\x03 \x01(\bR\frunTestCases\"\x96\x01\n" +
	"\x10SaveRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x129\n" +
	"\ftest_results\x18\x04 \x03(\v2\x16.cel.v1.TestCaseResultR\vtestResults\")\n" +
	"\x0eGetRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\"L\n" +
	"\x0fGetRuleResponse\x12#\n" +
	"\x04rule\x18\x01 \x01(\v2\x0f.cel.v1.CELRuleR\x04rule\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"\xb6\x01\n" +
	"\x10ListRulesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12/\n" +
	"\x06filter\x18\x03 \x01(\v2\x17.cel.v1.ListRulesFilterR\x06filter\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x1c\n" +
	"\tascending\x18\x05 \x01(\bR\tascending\"\xfb\x01\n" +
	"\x0fListRulesFilter\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12\x1f\n" +
	"\vsearch_text\x18\x04 \x01(\tR\n" +
	"searchText\x12#\n" +
	"\rverified_only\x18\x05 \x01(\bR\fverifiedOnly\x121\n" +
	"\x14compliance_framework\x18\x06 \x01(\tR\x13complianceFramework\x12#\n" +
	"\rresource_type\x18\a \x01(\tR\fresourceType\"\x83\x01\n" +
	"\x11ListRulesResponse\x12%\n" +
	"\x05rules\x18\x01 \x03(\v2\x0f.cel.v1.CELRuleR\x05rules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xb9\x01\n" +
	"\x11UpdateRuleRequest\x12#\n" +
	"\x04rule\x18\x01 \x01(\v2\x0f.cel.v1.CELRuleR\x04rule\x124\n" +
	"\x16validate_before_update\x18\x02 \x01(\bR\x14validateBeforeUpdate\x12$\n" +
	"\x0erun_test_cases\x18\x03 \x01(\bR\frunTestCases\x12#\n" +
	"\rupdate_fields\x18\x04 \x03(\tR\fupdateFields\"\x7f\n" +
	"\x12UpdateRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x129\n" +
	"\ftest_results\x18\x03 \x03(\v2\x16.cel.v1.TestCaseResultR\vtestResults\",\n" +
	"\x11DeleteRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\"D\n" +
	"\x12DeleteRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xe7\x01\n" +
	"\x12ExportRulesRequest\x12\x19\n" +
	"\brule_ids\x18\x01 \x03(\tR\aruleIds\x12,\n" +
	"\x06format\x18\x02 \x01(\x0e2\x14.cel.v1.ExportFormatR\x06format\x12/\n" +
	"\x06filter\x18\x03 \x01(\v2\x17.cel.v1.ListRulesFilterR\x06filter\x12,\n" +
	"\x12include_test_cases\x18\x04 \x01(\bR\x10includeTestCases\x12)\n" +
	"\x10include_metadata\x18\x05 \x01(\bR\x0fincludeMetadata\"\x9b\x01\n" +
	"\x13ExportRulesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"rule_count\x18\x05 \x01(\x05R\truleCount\"\x87\x01\n" +
	"\x12ImportRulesRequest\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12,\n" +
	"\x06format\x18\x02 \x01(\x0e2\x14.cel.v1.ImportFormatR\x06format\x12/\n" +
	"\aoptions\x18\x03 \x01(\v2\x15.cel.v1.ImportOptionsR\aoptions\"\xf8\x01\n" +
	"\rImportOptions\x12-\n" +
	"\x12overwrite_existing\x18\x01 \x01(\bR\x11overwriteExisting\x12!\n" +
	"\fvalidate_all\x18\x02 \x01(\bR\vvalidateAll\x12$\n" +
	"\x0erun_test_cases\x18\x03 \x01(\bR\frunTestCases\x12\"\n" +
	"\rskip_on_error\x18\x04 \x01(\bR\vskipOnError\x12\x1e\n" +
	"\vtags_to_add\x18\x05 \x03(\tR\ttagsToAdd\x12+\n" +
	"\x11category_override\x18\x06 \x01(\tR\x10categoryOverride\"\xe4\x01\n" +
	"\x13ImportRulesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12%\n" +
	"\x0eimported_count\x18\x03 \x01(\x05R\rimportedCount\x12#\n" +
	"\rskipped_count\x18\x04 \x01(\x05R\fskippedCount\x12!\n" +
	"\ffailed_count\x18\x05 \x01(\x05R\vfailedCount\x12.\n" +
	"\aresults\x18\x06 \x03(\v2\x14.cel.v1.ImportResultR\aresults\"t\n" +
	"\fImportResult\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x17\n" +
	"\arule_id\x18\x04 \x01(\tR\x06ruleId\"\x95\x01\n" +
	" ValidateRuleWithTestCasesRequest\x12#\n" +
	"\x04rule\x18\x01 \x01(\v2\x0f.cel.v1.CELRuleR\x04rule\x12.\n" +
	"\x13run_against_cluster\x18\x02 \x01(\bR\x11runAgainstCluster\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\"\xc0\x01\n" +
	"!ValidateRuleWithTestCasesResponse\x12\x1d\n" +
	"\n" +
	"all_passed\x18\x01 \x01(\bR\tallPassed\x129\n" +
	"\ftest_results\x18\x02 \x03(\v2\x16.cel.v1.TestCaseResultR\vtestResults\x12A\n" +
	"\x0fcluster_results\x18\x03 \x03(\v2\x18.cel.v1.ValidationResultR\x0eclusterResults\"\xcc\x01\n" +
	"\x0eTestCaseResult\x12 \n" +
	"\ftest_case_id\x18\x01 \x01(\tR\n" +
	"testCaseId\x12$\n" +
	"\x0etest_case_name\x18\x02 \x01(\tR\ftestCaseName\x12\x16\n" +
	"\x06passed\x18\x03 \x01(\bR\x06passed\x12#\n" +
	"\ractual_result\x18\x04 \x01(\tR\factualResult\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12\x1f\n" +
	"\vduration_ms\x18\x06 \x01(\x03R\n" +
	"durationMs\"\x97\x01\n" +
	"\x17RuleModificationContext\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\x122\n" +
	"\fcurrent_rule\x18\x02 \x01(\v2\x0f.cel.v1.CELRuleR\vcurrentRule\x12/\n" +
	"\x13modification_intent\x18\x03 \x01(\tR\x12modificationIntent\"\x8c\x01\n" +
	"\x13ConversationMessage\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12)\n" +
	"\x04rule\x18\x04 \x01(\v2\x15.cel.v1.GeneratedRuleR\x04rule\"\x8b\x01\n" +
	"\x0fQuestionMessage\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x18\n" +
	"\aoptions\x18\x02 \x03(\tR\aoptions\x12\x18\n" +
	"\acontext\x18\x03 \x01(\tR\acontext\x12(\n" +
	"\x04type\x18\x04 \x01(\x0e2\x14.cel.v1.QuestionTypeR\x04type*\xac\x01\n" +
	"\x0eFileAccessMode\x12 \n" +
	"\x1cFILE_ACCESS_MODE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aFILE_ACCESS_MODE_HOST_PATH\x10\x01\x12\x1e\n" +
	"\x1aFILE_ACCESS_MODE_CONTAINER\x10\x02\x12\x1e\n" +
	"\x1aFILE_ACCESS_MODE_DAEMONSET\x10\x03\x12\x18\n" +
	"\x14FILE_ACCESS_MODE_SSH\x10\x04*\x91\x01\n" +
	"\fExportFormat\x12\x1d\n" +
	"\x19EXPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EXPORT_FORMAT_JSON\x10\x01\x12\x16\n" +
	"\x12EXPORT_FORMAT_YAML\x10\x02\x12\x16\n" +
	"\x12EXPORT_FORMAT_REGO\x10\x03\x12\x1a\n" +
	"\x16EXPORT_FORMAT_SENTINEL\x10\x04*|\n" +
	"\fImportFormat\x12\x1d\n" +
	"\x19IMPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12IMPORT_FORMAT_JSON\x10\x01\x12\x16\n" +
	"\x12IMPORT_FORMAT_YAML\x10\x02\x12\x1d\n" +
	"\x19IMPORT_FORMAT_AUTO_DETECT\x10\x03*\xab\x01\n" +
	"\fQuestionType\x12\x1d\n" +
	"\x19QUESTION_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bQUESTION_TYPE_CLARIFICATION\x10\x01\x12\x1e\n" +
	"\x1aQUESTION_TYPE_CONFIRMATION\x10\x02\x12\x18\n" +
	"\x14QUESTION_TYPE_CHOICE\x10\x03\x12!\n" +
	"\x1dQUESTION_TYPE_ADDITIONAL_INFO\x10\x042\xf8\a\n" +
	"\x14CELValidationService\x12E\n" +
	"\vValidateCEL\x12\x1a.cel.v1.ValidateCELRequest\x1a\x1a.cel.v1.ValidationResponse\x12\\\n" +
	"\x11ValidateCELStream\x12 .cel.v1.ValidateCELStreamRequest\x1a!.cel.v1.ValidateCELStreamResponse(\x010\x01\x12X\n" +
	"\x11DiscoverResources\x12 .cel.v1.DiscoverResourcesRequest\x1a!.cel.v1.ResourceDiscoveryResponse\x12Q\n" +
	"\x10ExecuteAgentTask\x12\x1d.cel.v1.AgentExecutionRequest\x1a\x1e.cel.v1.AgentExecutionResponse\x12E\n" +
	"\n" +
	"ChatAssist\x12\x19.cel.v1.ChatAssistRequest\x1a\x1a.cel.v1.ChatAssistResponse0\x01\x12=\n" +
	"\bSaveRule\x12\x17.cel.v1.SaveRuleRequest\x1a\x18.cel.v1.SaveRuleResponse\x12:\n" +
	"\aGetRule\x12\x16.cel.v1.GetRuleRequest\x1a\x17.cel.v1.GetRuleResponse\x12@\n" +
	"\tListRules\x12\x18.cel.v1.ListRulesRequest\x1a\x19.cel.v1.ListRulesResponse\x12C\n" +
	"\n" +
	"UpdateRule\x12\x19.cel.v1.UpdateRuleRequest\x1a\x1a.cel.v1.UpdateRuleResponse\x12C\n" +
	"\n" +
	"DeleteRule\x12\x19.cel.v1.DeleteRuleRequest\x1a\x1a.cel.v1.DeleteRuleResponse\x12F\n" +
	"\vExportRules\x12\x1a.cel.v1.ExportRulesRequest\x1a\x1b.cel.v1.ExportRulesResponse\x12F\n" +
	"\vImportRules\x12\x1a.cel.v1.ImportRulesRequest\x1a\x1b.cel.v1.ImportRulesResponse\x12p\n" +
	"\x19ValidateRuleWithTestCases\x12(.cel.v1.ValidateRuleWithTestCasesRequest\x1a).cel.v1.ValidateRuleWithTestCasesResponseB7Z5github.com/Vincent056/cel-rpc-server/gen/cel/v1;celv1b\x06proto3"

var (
	file_cel_v1_cel_proto_rawDescOnce sync.Once
	file_cel_v1_cel_proto_rawDescData []byte
)

func file_cel_v1_cel_proto_rawDescGZIP() []byte {
	file_cel_v1_cel_proto_rawDescOnce.Do(func() {
		file_cel_v1_cel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cel_v1_cel_proto_rawDesc), len(file_cel_v1_cel_proto_rawDesc)))
	})
	return file_cel_v1_cel_proto_rawDescData
}

var file_cel_v1_cel_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_cel_v1_cel_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_cel_v1_cel_proto_goTypes = []any{
	(FileAccessMode)(0),                       // 0: cel.v1.FileAccessMode
	(ExportFormat)(0),                         // 1: cel.v1.ExportFormat
	(ImportFormat)(0),                         // 2: cel.v1.ImportFormat
	(QuestionType)(0),                         // 3: cel.v1.QuestionType
	(StreamControl_Action)(0),                 // 4: cel.v1.StreamControl.Action
	(NodeScannerStatus_Status)(0),             // 5: cel.v1.NodeScannerStatus.Status
	(*ValidateCELRequest)(nil),                // 6: cel.v1.ValidateCELRequest
	(*RuleInput)(nil),                         // 7: cel.v1.RuleInput
	(*KubernetesInput)(nil),                   // 8: cel.v1.KubernetesInput
	(*FileInput)(nil),                         // 9: cel.v1.FileInput
	(*NodeSelector)(nil),                      // 10: cel.v1.NodeSelector
	(*HttpInput)(nil),                         // 11: cel.v1.HttpInput
	(*ValidationResponse)(nil),                // 12: cel.v1.ValidationResponse
	(*ValidationResult)(nil),                  // 13: cel.v1.ValidationResult
	(*ResourceInfo)(nil),                      // 14: cel.v1.ResourceInfo
	(*PerformanceMetrics)(nil),                // 15: cel.v1.PerformanceMetrics
	(*DiscoverResourcesRequest)(nil),          // 16: cel.v1.DiscoverResourcesRequest
	(*DiscoveryOptions)(nil),                  // 17: cel.v1.DiscoveryOptions
	(*GVRFilter)(nil),                         // 18: cel.v1.GVRFilter
	(*ResourceDiscoveryResponse)(nil),         // 19: cel.v1.ResourceDiscoveryResponse
	(*DiscoveredResource)(nil),                // 20: cel.v1.DiscoveredResource
	(*ResourceSample)(nil),                    // 21: cel.v1.ResourceSample
	(*AgentTask)(nil),                         // 22: cel.v1.AgentTask
	(*AgentExecutionRequest)(nil),             // 23: cel.v1.AgentExecutionRequest
	(*AgentExecutionResponse)(nil),            // 24: cel.v1.AgentExecutionResponse
	(*ValidateCELStreamRequest)(nil),          // 25: cel.v1.ValidateCELStreamRequest
	(*StreamControl)(nil),                     // 26: cel.v1.StreamControl
	(*ValidateCELStreamResponse)(nil),         // 27: cel.v1.ValidateCELStreamResponse
	(*NodeScannerStatus)(nil),                 // 28: cel.v1.NodeScannerStatus
	(*NodeValidationResult)(nil),              // 29: cel.v1.NodeValidationResult
	(*ValidationProgress)(nil),                // 30: cel.v1.ValidationProgress
	(*StreamError)(nil),                       // 31: cel.v1.StreamError
	(*ChatAssistRequest)(nil),                 // 32: cel.v1.ChatAssistRequest
	(*RuleGenerationContext)(nil),             // 33: cel.v1.RuleGenerationContext
	(*TestDataContext)(nil),                   // 34: cel.v1.TestDataContext
	(*ChatAssistResponse)(nil),                // 35: cel.v1.ChatAssistResponse
	(*ThinkingMessage)(nil),                   // 36: cel.v1.ThinkingMessage
	(*GeneratedRule)(nil),                     // 37: cel.v1.GeneratedRule
	(*ValidationMessage)(nil),                 // 38: cel.v1.ValidationMessage
	(*ValidationDetail)(nil),                  // 39: cel.v1.ValidationDetail
	(*TextMessage)(nil),                       // 40: cel.v1.TextMessage
	(*ErrorMessage)(nil),                      // 41: cel.v1.ErrorMessage
	(*ResourcesFound)(nil),                    // 42: cel.v1.ResourcesFound
	(*CELRule)(nil),                           // 43: cel.v1.CELRule
	(*RuleTestCase)(nil),                      // 44: cel.v1.RuleTestCase
	(*RuleMetadata)(nil),                      // 45: cel.v1.RuleMetadata
	(*SaveRuleRequest)(nil),                   // 46: cel.v1.SaveRuleRequest
	(*SaveRuleResponse)(nil),                  // 47: cel.v1.SaveRuleResponse
	(*GetRuleRequest)(nil),                    // 48: cel.v1.GetRuleRequest
	(*GetRuleResponse)(nil),                   // 49: cel.v1.GetRuleResponse
	(*ListRulesRequest)(nil),                  // 50: cel.v1.ListRulesRequest
	(*ListRulesFilter)(nil),                   // 51: cel.v1.ListRulesFilter
	(*ListRulesResponse)(nil),                 // 52: cel.v1.ListRulesResponse
	(*UpdateRuleRequest)(nil),                 // 53: cel.v1.UpdateRuleRequest
	(*UpdateRuleResponse)(nil),                // 54: cel.v1.UpdateRuleResponse
	(*DeleteRuleRequest)(nil),                 // 55: cel.v1.DeleteRuleRequest
	(*DeleteRuleResponse)(nil),                // 56: cel.v1.DeleteRuleResponse
	(*ExportRulesRequest)(nil),                // 57: cel.v1.ExportRulesRequest
	(*ExportRulesResponse)(nil),               // 58: cel.v1.ExportRulesResponse
	(*ImportRulesRequest)(nil),                // 59: cel.v1.ImportRulesRequest
	(*ImportOptions)(nil),                     // 60: cel.v1.ImportOptions
	(*ImportRulesResponse)(nil),               // 61: cel.v1.ImportRulesResponse
	(*ImportResult)(nil),                      // 62: cel.v1.ImportResult
	(*ValidateRuleWithTestCasesRequest)(nil),  // 63: cel.v1.ValidateRuleWithTestCasesRequest
	(*ValidateRuleWithTestCasesResponse)(nil), // 64: cel.v1.ValidateRuleWithTestCasesResponse
	(*TestCaseResult)(nil),                    // 65: cel.v1.TestCaseResult
	(*RuleModificationContext)(nil),           // 66: cel.v1.RuleModificationContext
	(*ConversationMessage)(nil),               // 67: cel.v1.ConversationMessage
	(*QuestionMessage)(nil),                   // 68: cel.v1.QuestionMessage
	nil,                                       // 69: cel.v1.NodeSelector.LabelsEntry
	nil,                                       // 70: cel.v1.HttpInput.HeadersEntry
	nil,                                       // 71: cel.v1.ValidationResult.EvaluationContextEntry
	nil,                                       // 72: cel.v1.ResourceSample.LabelsEntry
	nil,                                       // 73: cel.v1.AgentTask.ParametersEntry
	nil,                                       // 74: cel.v1.ValidationProgress.NodeStatusesEntry
	nil,                                       // 75: cel.v1.RuleTestCase.TestDataEntry
	nil,                                       // 76: cel.v1.RuleMetadata.CustomFieldsEntry
	(*timestamppb.Timestamp)(nil),             // 77: google.protobuf.Timestamp
}
var file_cel_v1_cel_proto_depIdxs = []int32{
	44, // 0: cel.v1.ValidateCELRequest.test_cases:type_name -> cel.v1.RuleTestCase
	7,  // 1: cel.v1.ValidateCELRequest.inputs:type_name -> cel.v1.RuleInput
	8,  // 2: cel.v1.RuleInput.kubernetes:type_name -> cel.v1.KubernetesInput
	9,  // 3: cel.v1.RuleInput.file:type_name -> cel.v1.FileInput
	11, // 4: cel.v1.RuleInput.http:type_name -> cel.v1.HttpInput
	10, // 5: cel.v1.FileInput.node_selector:type_name -> cel.v1.NodeSelector
	0,  // 6: cel.v1.FileInput.access_mode:type_name -> cel.v1.FileAccessMode
	69, // 7: cel.v1.NodeSelector.labels:type_name -> cel.v1.NodeSelector.LabelsEntry
	70, // 8: cel.v1.HttpInput.headers:type_name -> cel.v1.HttpInput.HeadersEntry
	13, // 9: cel.v1.ValidationResponse.results:type_name -> cel.v1.ValidationResult
	15, // 10: cel.v1.ValidationResponse.performance:type_name -> cel.v1.PerformanceMetrics
	14, // 11: cel.v1.ValidationResult.resource_info:type_name -> cel.v1.ResourceInfo
	71, // 12: cel.v1.ValidationResult.evaluation_context:type_name -> cel.v1.ValidationResult.EvaluationContextEntry
	18, // 13: cel.v1.DiscoverResourcesRequest.gvr_filters:type_name -> cel.v1.GVRFilter
	17, // 14: cel.v1.DiscoverResourcesRequest.options:type_name -> cel.v1.DiscoveryOptions
	20, // 15: cel.v1.ResourceDiscoveryResponse.resources:type_name -> cel.v1.DiscoveredResource
	21, // 16: cel.v1.DiscoveredResource.samples:type_name -> cel.v1.ResourceSample
	72, // 17: cel.v1.ResourceSample.labels:type_name -> cel.v1.ResourceSample.LabelsEntry
	77, // 18: cel.v1.ResourceSample.created_at:type_name -> google.protobuf.Timestamp
	73, // 19: cel.v1.AgentTask.parameters:type_name -> cel.v1.AgentTask.ParametersEntry
	22, // 20: cel.v1.AgentExecutionRequest.task:type_name -> cel.v1.AgentTask
	6,  // 21: cel.v1.ValidateCELStreamRequest.validation_request:type_name -> cel.v1.ValidateCELRequest
	26, // 22: cel.v1.ValidateCELStreamRequest.control:type_name -> cel.v1.StreamControl
	4,  // 23: cel.v1.StreamControl.action:type_name -> cel.v1.StreamControl.Action
	28, // 24: cel.v1.ValidateCELStreamResponse.node_status:type_name -> cel.v1.NodeScannerStatus
	29, // 25: cel.v1.ValidateCELStreamResponse.node_result:type_name -> cel.v1.NodeValidationResult
	30, // 26: cel.v1.ValidateCELStreamResponse.progress:type_name -> cel.v1.ValidationProgress
	31, // 27: cel.v1.ValidateCELStreamResponse.error:type_name -> cel.v1.StreamError
	5,  // 28: cel.v1.NodeScannerStatus.status:type_name -> cel.v1.NodeScannerStatus.Status
	13, // 29: cel.v1.NodeValidationResult.result:type_name -> cel.v1.ValidationResult
	74, // 30: cel.v1.ValidationProgress.node_statuses:type_name -> cel.v1.ValidationProgress.NodeStatusesEntry
	33, // 31: cel.v1.ChatAssistRequest.rule_context:type_name -> cel.v1.RuleGenerationContext
	34, // 32: cel.v1.ChatAssistRequest.test_context:type_name -> cel.v1.TestDataContext
	66, // 33: cel.v1.ChatAssistRequest.modification_context:type_name -> cel.v1.RuleModificationContext
	67, // 34: cel.v1.ChatAssistRequest.previous_messages:type_name -> cel.v1.ConversationMessage
	43, // 35: cel.v1.ChatAssistRequest.existing_rule:type_name -> cel.v1.CELRule
	36, // 36: cel.v1.ChatAssistResponse.thinking:type_name -> cel.v1.ThinkingMessage
	37, // 37: cel.v1.ChatAssistResponse.rule:type_name -> cel.v1.GeneratedRule
	38, // 38: cel.v1.ChatAssistResponse.validation:type_name -> cel.v1.ValidationMessage
	40, // 39: cel.v1.ChatAssistResponse.text:type_name -> cel.v1.TextMessage
	41, // 40: cel.v1.ChatAssistResponse.error:type_name -> cel.v1.ErrorMessage
	42, // 41: cel.v1.ChatAssistResponse.resources:type_name -> cel.v1.ResourcesFound
	68, // 42: cel.v1.ChatAssistResponse.question:type_name -> cel.v1.QuestionMessage
	7,  // 43: cel.v1.GeneratedRule.suggested_inputs:type_name -> cel.v1.RuleInput
	44, // 44: cel.v1.GeneratedRule.test_cases:type_name -> cel.v1.RuleTestCase
	39, // 45: cel.v1.ValidationMessage.details:type_name -> cel.v1.ValidationDetail
	7,  // 46: cel.v1.CELRule.inputs:type_name -> cel.v1.RuleInput
	44, // 47: cel.v1.CELRule.test_cases:type_name -> cel.v1.RuleTestCase
	45, // 48: cel.v1.CELRule.metadata:type_name -> cel.v1.RuleMetadata
	75, // 49: cel.v1.RuleTestCase.test_data:type_name -> cel.v1.RuleTestCase.TestDataEntry
	76, // 50: cel.v1.RuleMetadata.custom_fields:type_name -> cel.v1.RuleMetadata.CustomFieldsEntry
	43, // 51: cel.v1.SaveRuleRequest.rule:type_name -> cel.v1.CELRule
	65, // 52: cel.v1.SaveRuleResponse.test_results:type_name -> cel.v1.TestCaseResult
	43, // 53: cel.v1.GetRuleResponse.rule:type_name -> cel.v1.CELRule
	51, // 54: cel.v1.ListRulesRequest.filter:type_name -> cel.v1.ListRulesFilter
	43, // 55: cel.v1.ListRulesResponse.rules:type_name -> cel.v1.CELRule
	43, // 56: cel.v1.UpdateRuleRequest.rule:type_name -> cel.v1.CELRule
	65, // 57: cel.v1.UpdateRuleResponse.test_results:type_name -> cel.v1.TestCaseResult
	1,  // 58: cel.v1.ExportRulesRequest.format:type_name -> cel.v1.ExportFormat
	51, // 59: cel.v1.ExportRulesRequest.filter:type_name -> cel.v1.ListRulesFilter
	2,  // 60: cel.v1.ImportRulesRequest.format:type_name -> cel.v1.ImportFormat
	60, // 61: cel.v1.ImportRulesRequest.options:type_name -> cel.v1.ImportOptions
	62, // 62: cel.v1.ImportRulesResponse.results:type_name -> cel.v1.ImportResult
	43, // 63: cel.v1.ValidateRuleWithTestCasesRequest.rule:type_name -> cel.v1.CELRule
	65, // 64: cel.v1.ValidateRuleWithTestCasesResponse.test_results:type_name -> cel.v1.TestCaseResult
	13, // 65: cel.v1.ValidateRuleWithTestCasesResponse.cluster_results:type_name -> cel.v1.ValidationResult
	43, // 66: cel.v1.RuleModificationContext.current_rule:type_name -> cel.v1.CELRule
	37, // 67: cel.v1.ConversationMessage.rule:type_name -> cel.v1.GeneratedRule
	3,  // 68: cel.v1.QuestionMessage.type:type_name -> cel.v1.QuestionType
	28, // 69: cel.v1.ValidationProgress.NodeStatusesEntry.value:type_name -> cel.v1.NodeScannerStatus
	6,  // 70: cel.v1.CELValidationService.ValidateCEL:input_type -> cel.v1.ValidateCELRequest
	25, // 71: cel.v1.CELValidationService.ValidateCELStream:input_type -> cel.v1.ValidateCELStreamRequest
	16, // 72: cel.v1.CELValidationService.DiscoverResources:input_type -> cel.v1.DiscoverResourcesRequest
	23, // 73: cel.v1.CELValidationService.ExecuteAgentTask:input_type -> cel.v1.AgentExecutionRequest
	32, // 74: cel.v1.CELValidationService.ChatAssist:input_type -> cel.v1.ChatAssistRequest
	46, // 75: cel.v1.CELValidationService.SaveRule:input_type -> cel.v1.SaveRuleRequest
	48, // 76: cel.v1.CELValidationService.GetRule:input_type -> cel.v1.GetRuleRequest
	50, // 77: cel.v1.CELValidationService.ListRules:input_type -> cel.v1.ListRulesRequest
	53, // 78: cel.v1.CELValidationService.UpdateRule:input_type -> cel.v1.UpdateRuleRequest
	55, // 79: cel.v1.CELValidationService.DeleteRule:input_type -> cel.v1.DeleteRuleRequest
	57, // 80: cel.v1.CELValidationService.ExportRules:input_type -> cel.v1.ExportRulesRequest
	59, // 81: cel.v1.CELValidationService.ImportRules:input_type -> cel.v1.ImportRulesRequest
	63, // 82: cel.v1.CELValidationService.ValidateRuleWithTestCases:input_type -> cel.v1.ValidateRuleWithTestCasesRequest
	12, // 83: cel.v1.CELValidationService.ValidateCEL:output_type -> cel.v1.ValidationResponse
	27, // 84: cel.v1.CELValidationService.ValidateCELStream:output_type -> cel.v1.ValidateCELStreamResponse
	19, // 85: cel.v1.CELValidationService.DiscoverResources:output_type -> cel.v1.ResourceDiscoveryResponse
	24, // 86: cel.v1.CELValidationService.ExecuteAgentTask:output_type -> cel.v1.AgentExecutionResponse
	35, // 87: cel.v1.CELValidationService.ChatAssist:output_type -> cel.v1.ChatAssistResponse
	47, // 88: cel.v1.CELValidationService.SaveRule:output_type -> cel.v1.SaveRuleResponse
	49, // 89: cel.v1.CELValidationService.GetRule:output_type -> cel.v1.GetRuleResponse
	52, // 90: cel.v1.CELValidationService.ListRules:output_type -> cel.v1.ListRulesResponse
	54, // 91: cel.v1.CELValidationService.UpdateRule:output_type -> cel.v1.UpdateRuleResponse
	56, // 92: cel.v1.CELValidationService.DeleteRule:output_type -> cel.v1.DeleteRuleResponse
	58, // 93: cel.v1.CELValidationService.ExportRules:output_type -> cel.v1.ExportRulesResponse
	61, // 94: cel.v1.CELValidationService.ImportRules:output_type -> cel.v1.ImportRulesResponse
	64, // 95: cel.v1.CELValidationService.ValidateRuleWithTestCases:output_type -> cel.v1.ValidateRuleWithTestCasesResponse
	83, // [83:96] is the sub-list for method output_type
	70, // [70:83] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_cel_v1_cel_proto_init() }
func file_cel_v1_cel_proto_init() {
	if File_cel_v1_cel_proto != nil {
		return
	}
	file_cel_v1_cel_proto_msgTypes[1].OneofWrappers = []any{
		(*RuleInput_Kubernetes)(nil),
		(*RuleInput_File)(nil),
		(*RuleInput_Http)(nil),
	}
	file_cel_v1_cel_proto_msgTypes[3].OneofWrappers = []any{
		(*FileInput_NodeSelector)(nil),
		(*FileInput_AllNodes)(nil),
	}
	file_cel_v1_cel_proto_msgTypes[19].OneofWrappers = []any{
		(*ValidateCELStreamRequest_ValidationRequest)(nil),
		(*ValidateCELStreamRequest_Control)(nil),
	}
	file_cel_v1_cel_proto_msgTypes[21].OneofWrappers = []any{
		(*ValidateCELStreamResponse_NodeStatus)(nil),
		(*ValidateCELStreamResponse_NodeResult)(nil),
		(*ValidateCELStreamResponse_Progress)(nil),
		(*ValidateCELStreamResponse_Error)(nil),
	}
	file_cel_v1_cel_proto_msgTypes[26].OneofWrappers = []any{
		(*ChatAssistRequest_RuleContext)(nil),
		(*ChatAssistRequest_TestContext)(nil),
		(*ChatAssistRequest_ModificationContext)(nil),
	}
	file_cel_v1_cel_proto_msgTypes[29].OneofWrappers = []any{
		(*ChatAssistResponse_Thinking)(nil),
		(*ChatAssistResponse_Rule)(nil),
		(*ChatAssistResponse_Validation)(nil),
		(*ChatAssistResponse_Text)(nil),
		(*ChatAssistResponse_Error)(nil),
		(*ChatAssistResponse_Resources)(nil),
		(*ChatAssistResponse_Question)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cel_v1_cel_proto_rawDesc), len(file_cel_v1_cel_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cel_v1_cel_proto_goTypes,
		DependencyIndexes: file_cel_v1_cel_proto_depIdxs,
		EnumInfos:         file_cel_v1_cel_proto_enumTypes,
		MessageInfos:      file_cel_v1_cel_proto_msgTypes,
	}.Build()
	File_cel_v1_cel_proto = out.File
	file_cel_v1_cel_proto_goTypes = nil
	file_cel_v1_cel_proto_depIdxs = nil
}
